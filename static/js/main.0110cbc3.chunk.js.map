{"version":3,"sources":["docs/template/styled.tsx","docs/template/MainSidebar.tsx","docs/components/forms/SelectUnselectItemsDemo.tsx","docs/components/table/VAgGrid.tsx","docs/components/table/VPagination.tsx","docs/components/forms/VColorPicker.tsx","docs/components/forms/VInputs.tsx","docs/components/forms/VDragAndDrop.tsx","docs/components/notifications/VNotificationToast.tsx","docs/components/carousel/VCarousel.tsx","docs/components/load-progress/VLoadProgress.tsx","docs/components/suspense/VSuspense.tsx","docs/components/tabs/VTabsPanel.tsx","docs/components/org-chart/VOrgChart.tsx","docs/template/Home.tsx","docs/components/table/style.tsx","docs/components/table/tablesSamples/blueprintjs/defaultTable/DefaultTable.tsx","docs/components/table/Edito.tsx","docs/components/table/tablesSamples/blueprintjs/defaultTable/DefaultTableDocs.tsx","docs/components/table/tablesSamples/blueprintjs/typeSelection/TypeSelectionTable.tsx","docs/components/table/tablesSamples/blueprintjs/typeSelection/TypeSelectionTableDocs.tsx","docs/components/table/tablesSamples/blueprintjs/typeSelection/codeTypeSelectionSample.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/colorHeader/SetupHeaderTable.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/colorHeader/setupColorHeaderTableDocs.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/colorHeader/codeColorHeaderTableSample.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/sortable/SortableHeaderTable.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/sortable/SortableHeaderTableDocs.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/sortable/codeSortableHeaderTableSample.tsx","docs/components/table/tablesSamples/blueprintjs/setupHeader/SetupHeaderTableDocs.tsx","docs/components/table/VTableDocs.tsx","docs/router.tsx","docs/template/Main.tsx","App.tsx","index.tsx"],"names":["DocsContainer","styled","div","_templateObject","SidebarContainer","_templateObject2","MainContainer","_templateObject3","CompanyName","_templateObject4","HomeContainer","_templateObject5","MainSidebar","_useState","useState","table","forms","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","type","id","htmlFor","lib","to","onClick","objectSpread","collapse","isOpen","itemsUnassigned","active","text","value","itemsAssigned","VSelectUnselectItemsDemo","gsi_ui_lib","listsHeights","handleCancel","console","log","handleSave","element","store","React","Component","label","datesColumnDefs","size","i","date","moment","Date","add","push","colId","concat","format","headerName","field","sortable","cellEditor","cellEditorParams","values","cellRenderer","params","suppressMenu","pinned","lockPosition","editable","totalsColumnDefs","cellStyle","textAlign","backgroundColor","getData","data","dates","datesData","forEach","x","name","workShift","company","supervisor","phonebook","terminal","getDataTotal","labels","_loop","Math","floor","random","pos","length","some","filter","getState","columnDefs","defaultColDef","tooltipComponent","rowData","VAgGridDoc","apiGrid","setApiGrid","_useState3","_useState4","columnApi","setColumnDefGrid","_useState5","_useState6","apiGridTotal","setApiGridTotal","_useState7","_useState8","columnApiTotal","setColumnDefGridTotal","_useState9","_useState10","enableContextualMenu","setEnableContextualMenu","_useState11","getStateTotals","_useState12","stateGridTotal","_useState13","_useState14","hideColumns","setHideColumns","_useState15","_useState16","colorConditional","setColorConditional","_useState17","_useState18","valueConditional","setValueConditional","_useState19","_useState20","clearData","setClearData","_useState21","_useState22","showLoading","setShowLoading","topOptions","alignedGrids","bottomOptions","_useState23","_useState24","oldColumns","setOldColumns","mapperDynamicOptionMenuToContextualMenu","options","map","cssClasses","action","row","node","rowIndex","rangeSelection","api","getRangeSelections","Array","isArray","result","rangesSelection","columns","rangeParsed","range","_loop2","coldId","getColId","y","infoSelection","columnName","columnIndex","findIndex","s","start","end","parseRangeSelection","getAllDisplayedColumns","showToastNotification","message","column","getContextMenuItems","columnFixed","includes","tooltip","subMenu","raiseDoSearchWhenUserStoppedTypingColor","debounce","changeConditionalColor","color","hex","columnDate","getColumnState","columnDef","getColumnDef","getProperLetterColor","setColumnDefs","toConsumableArray","refreshCells","raiseDoSearchWhenUserStoppedTypingValue","isNaN","changeConditionalValue","parseInt","Fragment","style","width","display","height","inline","onChange","marginLeft","Color","typePickerColor","onGridReady","event","ensureColumnVisible","gridOptions","suppressContextMenu","animateRows","noRowsOverlayComponent","loadingOverlayComponent","frameworkComponents","customLoadingOverlay","VSpinner","customNoRowsOverlay","EmptyData","setColumnsVisible","setRowData","hideOverlay","showLoadingOverlay","ensureIndexVisible","ensureNodeVisible","enableRangeSelection","onRowValueChanged","onCellValueChanged","oldValue","newValue","getColDef","onColumnMoved","toIndex","getDisplayedRowCount","onDragStarted","oldOrder","onDragStopped","newOrder","isPinned","join","timeout","VPaginationDoc","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCountry","country","onPageChanged","_data$paginationData","paginationData","currentPage","totalPages","offset","pageLimit","currentCountries","slice","itemsByPage","renderInfoDetails","infoPage","margin","totals","allCountries","totalCountries","index","key","totalRecords","pageNeighbours","pages","customerStyle","borderRadius","pageSelectedBackgroundColor","pageSelectedColor","iconColor","pageHoverColor","pageHoverBackgroundColor","VColorPickerDoc","handleChangeColor","rgb","handleChangeTypeToChromePicker","handleChangeTypeToSketchPicker","disable","_this2","position","sex","rep","VInputsDoc","observer","selectValue","setSelectValue","form","FormState","username","FieldState","search","description","tags","age","have_job","places","toDate","multiple","movies","setSelectedValue","rightButton","buttons","minimal","icon","$","fill","required","layer","labelWidth","inputWidth","labelOrientation","inputOrientation","placeholder","fieldState","tipLabel","rightElement","noLabel","validators","toString","indexOf","Validators","lt","exact","leftIcon","defaultText","limit","tagValidation","regex","errorMessage","checkBoxAtLeft","alignIndicator","dateType","iconName","iconOnly","list","alignItems","justifyContent","items","content","src","NewDndList","direction","paddingList","VDragAndDropDoc","open","containerOrientation","onDragAndDrop","output","html","VDragAndDrop_NewDndList","RowButtons","VNotificationToast_templateObject","VNotificationToastDocs","buttonsHeaderRow","propsList","href","target","onDismiss","padding","headerText","headerCustomComponent","intent","marginRight","elementsCarousel","VCarouselDoc","elements","buttonsJustify","VLoadProgressDoc","openProgress","setTimeout","onClose","title","Table","lazy","Promise","all","__webpack_require__","e","then","bind","resolve","_ref","VSuspenseDoc","VTabsPanelDoc","handelChangeTab","tab","tabList","iconSize","dataBadge","FirstTabList","activeBorderColor","beforeChangeTabValidation","handleChange","tabsAlertProps","confirmButtonText","cancelButtonText","canEscapeKeyCancel","bodyText","dataSource","children","VOrgChartDoc","onReorder","draggable","Home","divider","Container","style_templateObject","ContainerEditor","style_templateObject2","TagEditor","span","style_templateObject3","PropertyEditor","style_templateObject4","ImportTag","strong","style_templateObject5","NoteTag","_templateObject6","H4Pointer","h4","_templateObject7","H3Pointer","h5","_templateObject8","faker","require","DefaultTableBlueprintSample","count","countData","firstName","lastName","phone","phoneNumber","companyName","email","internet","notes","lorem","sentence","columns_name","striped","TagCode","showPropertiesInPreTag","property","DefaultTableDocs","defaultCollapse","setDefaultCollapse","toggleDefaultCollapse","transitionDuration","DefaultTable_DefaultTableBlueprintSample","overflowY","Edito_TagCode","card","marginTop","TypeSelectionTableBlueprintSample","typeSelection","setTypeSelection","elementSelected","setElementSelected","regionSelected","setRegionSelected","regions","setRegions","doubleClick","setDoubleClick","styleSelection","setStyleSelection","filterable","cols","rows","borderColor","cellSelectionType","actionsSelection","onSelectionChange","onRegionsChange","onDoubleClick","selectionStyle","JSON","stringify","undefined","TypeSelectionTableTableDocs","TypeSelectionTable_TypeSelectionTableBlueprintSample","HeaderSetupTableBlueprintSample","setColumns","configColumnsHeader","textColor","reordering","onOrderColumns","enableColumnResizing","columnWidths","SetupColorHeaderTableDocs","headerColorCollapse","setHeaderColorCollapse","SetupHeaderTable_HeaderSetupTableBlueprintSample","SortableTableBlueprintSample","onSort","setupsOrden","order","SetupSortableHeaderTableDocs","SortableHeaderTable_SortableTableBlueprintSample","HeaderStupTableDocs","setupColorHeaderTableDocs_SetupColorHeaderTableDocs","SortableHeaderTableDocs_SetupSortableHeaderTableDocs","VTableDocs","headerBackgroundColor","headerColor","DefaultTableDocs_DefaultTableDocs","TypeSelectionTableDocs_TypeSelectionTableTableDocs","SetupHeaderTableDocs_HeaderStupTableDocs","routes","component","onEnter","path","template_Home","VAgGrid","table_VTableDocs","VSuspense","VPagination","VInputs","VColorPicker","SelectUnselectItemsDemo_VSelectUnselectItemsDemo","VDragAndDrop","VTabsPanel","VNotificationToast","VLoadProgress","VOrgChart","VCarousel","Main","MainSidebar_MainSidebar","App","Main_Main","LicenseManager","setLicenseKey","process","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0110cbc3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const DocsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SidebarContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const CompanyName = styled.div`\n  text-align: center;\n  color: white;\n  letter-spacing: 2px;\n  font-size: 10px;\n`;\n\nexport const HomeContainer = styled.div`\n  padding: 10px;\n`;\n","import React, { useState } from 'react';\nimport { Collapse } from '@blueprintjs/core';\nimport { RiftLink } from 'rift-router';\nimport { CompanyName, SidebarContainer } from './styled';\n\nexport const MainSidebar = () => {\n  const [state, setState] = useState({\n    table: false,\n    forms: false\n  });\n  return (\n    <SidebarContainer>\n      <div className=\"header\" />\n      <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\" />\n      <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n        <div className=\"spinner diagonal part-1\" />\n        <div className=\"spinner horizontal\" />\n        <div className=\"spinner diagonal part-2\" />\n      </label>\n      <div id=\"sidebarMenu\">\n        <ul className=\"sidebarMenuInner\">\n          <li>\n            <RiftLink to=\"/\">Home</RiftLink>\n          </li>\n          <li>\n            <a\n              onClick={() => setState({ ...state, ...{ table: !state.table } })}\n            >\n              Table\n            </a>\n            <Collapse isOpen={state.table}>\n              <ul className=\"sidebarMenuInner\">\n                <li>\n                  <RiftLink to=\"/table/ag-grid\">Ag-Grid</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/blueprint\">Blueprint</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/blueprint/suspense\">\n                    Blueprint Suspense\n                  </RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/pagination\">Pagination</RiftLink>\n                </li>\n              </ul>\n            </Collapse>\n          </li>\n          <li>\n            <a\n              onClick={() => setState({ ...state, ...{ forms: !state.forms } })}\n            >\n              Forms\n            </a>\n            <Collapse isOpen={state.forms}>\n              <ul className=\"sidebarMenuInner\">\n                <li>\n                  <RiftLink to=\"/forms\">Example</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/color-picker\">Color Picker</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/select-unselect\">\n                    Select Unselect\n                  </RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/dnd\">Drag&Drop</RiftLink>\n                </li>\n              </ul>\n            </Collapse>\n          </li>\n          <li>\n            <RiftLink to=\"/tabs-panel\">Tabs Panel</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/toast\">Toast</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/load-progress\">Load Progress</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/carousel\">Carousel</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/hierarchy\">Hierarchy</RiftLink>\n          </li>\n        </ul>\n        <CompanyName>General Software Inc.</CompanyName>\n      </div>\n    </SidebarContainer>\n  );\n};\n","import React from 'react';\nimport { IItemsList, SelectUnselectItems } from 'gsi-ui';\n\nconst itemsUnassigned: IItemsList[] = [\n  { active: false, text: 'Item1', value: 'item1' },\n  { active: false, text: 'Item2', value: 'item2' },\n  { active: false, text: 'Item3', value: 'item3' },\n  { active: false, text: 'Item4', value: 'item4' }\n];\nconst itemsAssigned: IItemsList[] = [\n  { active: false, text: 'Item5', value: 'item5' },\n  { active: false, text: 'Item6', value: 'item6' },\n  { active: false, text: 'Item7', value: 'item7' },\n  { active: false, text: 'Item8', value: 'item8' }\n];\n\nexport const VSelectUnselectItemsDemo = () => {\n  const handleSave = (element: any) => {\n    console.log(element);\n  };\n  return (\n    <SelectUnselectItems\n      listsHeights=\"142px\"\n      handleCancel={() => console.log('cancelled')}\n      handleSave={handleSave}\n      itemsUnassigned={itemsUnassigned}\n      itemsAssigned={itemsAssigned}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  EmptyData,\n  getProperLetterColor,\n  showToastNotification,\n  VAgGrid,\n  VColorPicker,\n  VColorResult,\n  VInputField,\n  VSelectField,\n  VSpinner\n} from 'gsi-ui';\nimport {\n  CellValueChangedEvent,\n  ColDef,\n  Column,\n  ColumnApi,\n  ColumnMovedEvent,\n  DragStartedEvent,\n  DragStoppedEvent,\n  GetContextMenuItemsParams,\n  GridApi,\n  GridReadyEvent,\n  ICellRendererParams,\n  RangeSelection,\n  RowValueChangedEvent\n} from 'ag-grid-community';\n\nimport moment, { Moment } from 'moment';\nimport './vgrid.css';\n\nimport { ColumnState } from 'ag-grid-community/dist/lib/columnController/columnController';\nimport { debounce } from 'formstate/lib/internal/utils';\n\nclass MakeCellRender extends React.Component<ICellRendererParams> {\n  render() {\n    // put in render logic\n    return (\n      <>\n        <span onClick={() => this.onClick()}>{`${this.props.value} LOL`}</span>\n      </>\n    );\n  }\n\n  onClick = () => {\n    console.log('click');\n  };\n}\n\nclass CustomTooltip extends React.Component<any> {\n  constructor(props: any) {\n    super(props);\n    console.log('constructor', props);\n  }\n\n  componentDidMount() {\n    // this.props.reactContainer.className = 'custom-tooltip';\n  }\n\n  render() {\n    const data = this.props.api.getRowNode(this.props.rowIndex).data;\n    return (\n      <div\n        className=\"custom-tooltip\"\n        style={{ backgroundColor: this.props.color || 'white' }}\n      >\n        <p>\n          <span>{data.athlete}</span>\n        </p>\n        <p>\n          <span>Country: </span> {data.country}\n        </p>\n        <p>\n          <span>Total: </span> {data.total}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst store = [\n  {\n    label: 'Toyota',\n    value: 'Toyota'\n  },\n  {\n    label: 'Ford',\n    value: 'Ford'\n  },\n  {\n    label: 'Porsche',\n    value: 'Porsche'\n  }\n];\n\nconst datesColumnDefs = (size: number) => {\n  const datesColumnDefs: any[] = [];\n  for (let i = 0; i < size; i++) {\n    const date: Moment = moment(new Date());\n    date.add(i + 1, 'days');\n\n    datesColumnDefs.push({\n      colId: `${date.format('DD-MM-YYYY')}/date`,\n      headerName: date.format('DD-MM-YYYY'),\n      field: `${date.format('DD-MM-YYYY')}/date`,\n      sortable: false,\n      // cellRendererFramework: SelectCellRender,\n      cellEditor: 'agRichSelectCellEditor',\n\n      cellEditorParams: {\n        values: [{ label: 'On', value: '1' }, { label: 'Off', value: '2' }],\n        cellRenderer(params: any) {\n          return 'Value is <b>' + params.value.label + '</b>';\n        }\n      },\n      cellRenderer(params: any) {\n        return ' <b>' + params.value.label + '</b>';\n      },\n\n      suppressMenu: true,\n      pinned: false,\n      lockPosition: true,\n      editable: true\n    });\n  }\n  return datesColumnDefs;\n};\n\nconst totalsColumnDefs = (size: number) => {\n  const datesColumnDefs: any[] = [];\n  for (let i = 0; i < size; i++) {\n    const date: Moment = moment(new Date());\n    date.add(i + 1, 'days');\n\n    datesColumnDefs.push({\n      colId: `${date.format('DD-MM-YYYY')}/date`,\n      headerName: date.format('DD-MM-YYYY'),\n      field: `${date.format('DD-MM-YYYY')}/date`,\n      sortable: false,\n      suppressMenu: true,\n      pinned: false,\n      lockPosition: true,\n      cellStyle(params: any) {\n        if (params.value >= 5) {\n          // mark police cells as red\n          return { textAlign: 'end', backgroundColor: 'red' };\n        }\n        return null;\n      }\n    });\n  }\n  return datesColumnDefs;\n};\n\nconst getData = (size: number) => {\n  const data: any[] = [];\n  const dates = datesColumnDefs(60);\n  const datesData: any = {};\n  dates.forEach(x => {\n    datesData[x.colId] = { label: 'On', value: '1' };\n  });\n  for (let i = 0; i < size; i++) {\n    data.push({\n      name: `name_${i + 1}`,\n      workShift: `last name_${i + 1}`,\n      company: `company_${i + 1}`,\n      supervisor: `${i + 1}`,\n      phonebook: `phonebook_${i + 1}`,\n      terminal: `address_${i + 1}`,\n      ...datesData\n    });\n  }\n\n  return data;\n};\n\nconst getDataTotal = (size: number) => {\n  const data: any[] = [];\n  const dates = totalsColumnDefs(60);\n\n  let labels: string[] = [\n    'On',\n    'Off',\n    'Food',\n    'Gasoline',\n    'wood',\n    'PC',\n    'TV',\n    'Count Phone',\n    'Printer',\n    'Human Resources'\n  ];\n\n  for (let i = 0; i < size; i++) {\n    const datesData: any = {};\n    dates.forEach(x => {\n      datesData[x.colId] = Math.floor(Math.random() * 101);\n    });\n    const pos: number = Math.floor(Math.random() * labels.length);\n    if (i % 2 === 0 && !data.some(x => x.name === labels[pos])) {\n      data.push({\n        name: labels[pos],\n        ...datesData\n      });\n      labels = labels.filter(x => x !== labels[pos]);\n    } else {\n      data.push({\n        name: '% of total',\n        ...datesData\n      });\n    }\n  }\n\n  return data;\n};\n\nconst getState = () => {\n  const pinned: boolean = true;\n  const state: any = {\n    columnDefs: [\n      {\n        colId: 'name',\n        headerName: 'name',\n        field: 'name',\n        sortable: true,\n        cellEditor: 'agSelectCellEditor',\n        cellEditorParams: {\n          values: ['English', 'Spanish', 'French', 'Portuguese', '(other)']\n        },\n        suppressMenu: true,\n        pinned,\n        editable: true\n      },\n      {\n        colId: 'company',\n        headerName: 'company',\n        field: 'company',\n        sortable: true,\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'workShift',\n        headerName: 'last name',\n        field: 'workShift',\n        sortable: true,\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'supervisor',\n        headerName: 'Age',\n        field: 'supervisor',\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'phonebook',\n        headerName: 'phone book',\n        field: 'phonebook',\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'terminal',\n        headerName: 'Address',\n        field: 'terminal',\n        suppressMenu: true,\n        pinned\n      }\n    ],\n    defaultColDef: {\n      // set every column width\n\n      // make every column editable\n      editable: false,\n      filter: 'agTextColumnFilter',\n      tooltipComponent: 'customTooltip'\n    },\n    rowData: getData(200)\n  };\n\n  datesColumnDefs(60).forEach(x => {\n    state.columnDefs!.push(x);\n  });\n\n  return state;\n};\n\nconst getStateTotals = () => {\n  const pinned = true;\n  const state: any = {\n    columnDefs: [\n      {\n        colId: 'name',\n        headerName: 'Dates',\n        field: 'name',\n        sortable: false,\n        cellEditor: 'agSelectCellEditor',\n        cellEditorParams: {\n          values: ['English', 'Spanish', 'French', 'Portuguese', '(other)']\n        },\n        suppressMenu: true,\n        pinned\n      }\n    ],\n    defaultColDef: {\n      // set every column width\n\n      // make every column editable\n      editable: false,\n      filter: 'agTextColumnFilter'\n    },\n    rowData: getDataTotal(13)\n  };\n\n  totalsColumnDefs(60).forEach(x => {\n    state.columnDefs!.push(x);\n  });\n\n  return state;\n};\n\nclass SelectCellRender extends React.Component<ICellRendererParams> {\n  render() {\n    console.log(this.props.value);\n    return (\n      <VSelectField\n        minimal\n        fill\n        options={store}\n        inline\n        value={this.props.value}\n        id=\"store\"\n        // onChange={this.setSelectedValue}\n      />\n    );\n  }\n}\n\nconst VAgGridDoc = () => {\n  const [apiGrid, setApiGrid] = useState<GridApi | undefined>();\n  const [columnApi, setColumnDefGrid] = useState<ColumnApi | undefined>();\n\n  const [apiGridTotal, setApiGridTotal] = useState<GridApi | undefined>();\n\n  const [columnApiTotal, setColumnDefGridTotal] = useState<\n    ColumnApi | undefined\n  >();\n\n  const [enableContextualMenu, setEnableContextualMenu] = useState<boolean>(\n    true\n  );\n\n  const [stateGridTotal, setStateGridTotal] = useState<any>(getStateTotals());\n\n  const [hideColumns, setHideColumns] = useState<boolean>(true);\n\n  const [colorConditional, setColorConditional] = useState<string>('red');\n  const [valueConditional, setValueConditional] = useState<number>(60);\n\n  const [clearData, setClearData] = useState<boolean>(false);\n  const [showLoading, setShowLoading] = useState<boolean>(false);\n\n  const topOptions: any = { alignedGrids: [] };\n  const bottomOptions: any = { alignedGrids: [] };\n\n  topOptions.alignedGrids.push(bottomOptions);\n  bottomOptions.alignedGrids.push(topOptions);\n\n  const [oldColumns, setOldColumns] = useState<string[]>([]);\n\n  const onGridReady = (event: GridReadyEvent): void => {\n    console.log('GridReadyEvent', event);\n\n    event.api.ensureColumnVisible('31-05-2019/dates');\n    setApiGrid(event.api);\n\n    setColumnDefGrid(event.columnApi);\n  };\n\n  const onGridReadyTotal = (event: GridReadyEvent): void => {\n    console.log('GridReadyEvent', event);\n\n    event.api.ensureColumnVisible('31-05-2019/dates');\n    setApiGridTotal(event.api);\n    setColumnDefGridTotal(event.columnApi);\n  };\n\n  const onRowValueChanged = (event: RowValueChangedEvent) => {\n    console.log('RowValueChangedEvent', event);\n  };\n\n  const onCellValueChanged = (event: CellValueChangedEvent) => {\n    const row = getData(200)[event.rowIndex];\n\n    event.oldValue !== event.newValue &&\n      showToastNotification({\n        type: 'warning',\n        message: `se ha cambiado el valor ${row.name} de ${\n          event.oldValue.label\n        } a ${event.newValue.label} en la fecha ${\n          event.column.getColDef().headerName\n        }`\n      });\n  };\n\n  const onColumnMoved = (event: ColumnMovedEvent) => {\n    showToastNotification({\n      type: 'success',\n      message: `se ha movido la columna ${\n        event.column!.getColDef().colId\n      } a la posicion ${event!.toIndex! + 1 - 60} `\n    });\n  };\n\n  const onDragStopped = (event: DragStoppedEvent) => {\n    const newOrder = event!\n      .columnApi!.getAllDisplayedColumns()\n      .filter((x: Column) => x.isPinned())\n      .map(x => x.getColDef().field)\n      .join(' , ');\n    const oldOrder = oldColumns.join(' , ');\n\n    oldOrder !== newOrder &&\n      showToastNotification({\n        type: 'primary',\n        message: `${event.type} El nuevo orden de la columnas es ${newOrder} `,\n        timeout: 3000\n      });\n  };\n\n  const onDragStarted = (event: DragStartedEvent) => {\n    const oldOrder: string[] = event\n      .columnApi!.getColumnState()\n      .filter((x: ColumnState) => x.pinned)\n      .map((x: ColumnState) => x.colId!);\n    setOldColumns(oldOrder);\n  };\n\n  const toggleContextualMenu = () => {\n    setEnableContextualMenu(!enableContextualMenu);\n  };\n\n  const toggleVisibleColumns = () => {\n    columnApi!.setColumnsVisible(['company', 'workShift'], !hideColumns);\n    setHideColumns(!hideColumns);\n  };\n\n  const clearTable = () => {\n    if (!clearData) {\n      apiGrid && apiGrid.setRowData([]);\n      apiGrid && apiGrid.setColumnDefs([]);\n    } else {\n      apiGrid && apiGrid.setRowData(getData(200));\n      apiGrid && apiGrid.setColumnDefs(getState().columnDefs!);\n    }\n\n    setClearData(!clearData);\n  };\n\n  function createFlagImg(flag: any) {\n    return (\n      '<img border=\"0\" width=\"15\" height=\"10\" src=\"https://flags.fmcdn.net/data/flags/mini/' +\n      flag +\n      '.png\"/>'\n    );\n  }\n\n  const parseRangeSelection = (\n    rangesSelection: RangeSelection[],\n    value: any,\n    columns: Column[]\n  ) => {\n    const rangeParsed: {\n      data: any;\n      infoSelection: any;\n    }[] = [];\n\n    rangesSelection.forEach((range: RangeSelection) => {\n      for (let i = 0; i < range.columns!.length; i++) {\n        for (let row = range.start.rowIndex; row <= range.end.rowIndex; row++) {\n          const coldId = range.columns![i].getColId();\n\n          const exitRangeParsed = rangeParsed.some(\n            y =>\n              y.infoSelection.rowIndex === row &&\n              y.infoSelection.columnName === coldId\n          );\n          if (!exitRangeParsed) {\n            rangeParsed.push({\n              data: value,\n              infoSelection: {\n                rowIndex: row,\n                columnName: coldId,\n                columnIndex: columns.findIndex(s => s.getColId() === coldId)\n              }\n            });\n          }\n        }\n      }\n    });\n    return rangeParsed;\n  };\n\n  const mapperDynamicOptionMenuToContextualMenu = (\n    options: { label: string; value: string }[],\n    params: GetContextMenuItemsParams\n  ) => {\n    return options.map((x: { label: string; value: string }) => {\n      return {\n        name: x.label,\n        cssClasses: ['redFont', 'bold'],\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          const rangeSelection: RangeSelection[] = params.api!.getRangeSelections();\n\n          const value = rangeSelection ? rangeSelection : params.value;\n\n          if (Array.isArray(value)) {\n            const result = parseRangeSelection(\n              value,\n              x.value,\n              params.columnApi!.getAllDisplayedColumns()\n            );\n            console.log('actualizar con ', x.label, 'a estas tuplas', result);\n          } else {\n            console.log('params.value', value);\n          }\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Update sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${\n              params.value.label\n            } `\n          });\n        }\n      };\n    });\n  };\n\n  const getContextMenuItems = (params: GetContextMenuItemsParams) => {\n    const columnDefs = getState().columnDefs!;\n    const columnFixed = columnDefs!\n      .filter((x: any) => !x.colId.includes('/date'))\n      .map((y: any) => y.colId);\n    if (\n      params.column &&\n      columnFixed.some((x: string) => x === params.column.getColId())\n    ) {\n      return [\n        {\n          name: 'Update schedule driver ',\n          action() {\n            const row = getData(200)[params.node.rowIndex];\n\n            showToastNotification({\n              type: 'success',\n              message: `Accion Update sobre el driver ${\n                row.name\n              } en  column ${params.column.getColId()} con value ${\n                params.value\n              } `\n            });\n          },\n          cssClasses: ['redFont', 'bold']\n        },\n        {\n          name: 'Edit driver',\n          action() {\n            const row = getData(200)[params.node.rowIndex];\n\n            showToastNotification({\n              type: 'success',\n              message: `Accion Edit sobre el driver ${\n                row.name\n              } en  column ${params.column.getColId()} con value ${\n                params.value\n              } `\n            });\n          },\n          tooltip:\n            'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n        }\n      ];\n    }\n\n    const optionMenu: { label: string; value: any }[] = [\n      {\n        value: '1',\n        label: 'code 1'\n      },\n      {\n        value: '2',\n        label: 'code 2'\n      }\n    ];\n\n    return [\n      {\n        name: 'Update status ',\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Update sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${params.value} `\n          });\n        },\n        cssClasses: ['redFont', 'bold'],\n        subMenu: [\n          {\n            name: 'On',\n            subMenu: mapperDynamicOptionMenuToContextualMenu(optionMenu, params)\n          },\n          {\n            name: 'Off'\n          }\n        ]\n      },\n      {\n        name: 'Edit driver',\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Edit sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${params.value} `\n          });\n        },\n        tooltip:\n          'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n      }\n    ];\n\n    // let result = [\n    //   {\n    //     name: 'Alert ' + params.value,\n    //     action: function() {\n    //       window.alert('Alerting about ' + params.value);\n    //     },\n    //     cssClasses: ['redFont', 'bold']\n    //   },\n    //   {\n    //     name: 'Always Disabled',\n    //     disabled: true,\n    //     tooltip:\n    //       'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n    //   },\n    //   {\n    //     name: 'Country',\n    //     subMenu: [\n    //       {\n    //         name: 'Ireland',\n    //         action: function() {\n    //           console.log('Ireland was pressed');\n    //         },\n    //         icon: createFlagImg('ie')\n    //       },\n    //       {\n    //         name: 'UK',\n    //         action: function() {\n    //           console.log('UK was pressed');\n    //         },\n    //         icon: createFlagImg('gb')\n    //       },\n    //       {\n    //         name: 'France',\n    //         action: function() {\n    //           console.log('France was pressed');\n    //         },\n    //         icon: createFlagImg('fr')\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     name: 'Person',\n    //     subMenu: [\n    //       {\n    //         name: 'Niall',\n    //         action: function() {\n    //           console.log('Niall was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Sean',\n    //         action: function() {\n    //           console.log('Sean was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'John',\n    //         action: function() {\n    //           console.log('John was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Alberto',\n    //         action: function() {\n    //           console.log('Alberto was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Tony',\n    //         action: function() {\n    //           console.log('Tony was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Andrew',\n    //         action: function() {\n    //           console.log('Andrew was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Kev',\n    //         action: function() {\n    //           console.log('Kev was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Will',\n    //         action: function() {\n    //           console.log('Will was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Armaan',\n    //         action: function() {\n    //           console.log('Armaan was pressed');\n    //         }\n    //       }\n    //     ]\n    //   },\n    //   'separator',\n    //   {\n    //     name: 'Windows',\n    //     shortcut: 'Alt + W',\n    //     action: function() {\n    //       console.log('Windows Item Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/windows.png\"/>'\n    //   },\n    //   {\n    //     name: 'Mac',\n    //     shortcut: 'Alt + M',\n    //     action: function() {\n    //       console.log('Mac Item Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/mac.png\"/>'\n    //   },\n    //   'separator',\n    //   {\n    //     name: 'Checked',\n    //     checked: true,\n    //     action: function() {\n    //       console.log('Checked Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/mac.png\"/>'\n    //   },\n    //   'copy'\n    // ];\n    // return result;\n  };\n\n  const templateNoData = () => {\n    return (\n      '<div style=\"height: 100%;width: 100%; background: rgb(245, 245, 245); display: flex; justify-content: center;align-items: center\" >' +\n      '<h1  style=\" fontSize: 22; fontWeight: 400;  color: rgba(49, 59, 67, 0.27); padding: 10px; \">This is a custom \\'no rows\\' overlay</h1>' +\n      '</div>'\n    );\n  };\n\n  const suppressContextMenu = () => {\n    if (columnApi && apiGrid) {\n      return (\n        columnApi!.getColumnState().length === 0 ||\n        apiGrid!.getDisplayedRowCount() === 0\n      );\n    }\n\n    return false;\n  };\n\n  const onBtShowLoading = () => {\n    if (!showLoading) {\n      apiGrid && apiGrid.showLoadingOverlay();\n    } else {\n      apiGrid && apiGrid.hideOverlay();\n    }\n    setShowLoading(!showLoading);\n  };\n\n  const onBtScrolling = () => {\n    apiGrid && apiGrid!.ensureColumnVisible('30-07-2019/date');\n    apiGrid && apiGrid!.ensureColumnVisible('14-06-2019/date');\n\n    apiGridTotal && apiGridTotal!.ensureColumnVisible('30-07-2019/date');\n    apiGridTotal && apiGridTotal!.ensureColumnVisible('14-06-2019/date');\n\n    apiGrid && apiGrid!.ensureIndexVisible(100);\n    apiGrid && apiGrid!.ensureNodeVisible(200);\n  };\n\n  const changeColors = (value: any) => {\n    raiseDoSearchWhenUserStoppedTypingColor(value);\n  };\n\n  const raiseDoSearchWhenUserStoppedTypingColor = debounce((value: any) => {\n    changeConditionalColor(value);\n  }, 150);\n\n  const changeConditionalColor = (color: VColorResult) => {\n    setColorConditional(color.hex);\n\n    const columnDate: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef,\n          cellStyle(params: any) {\n            if (params.value >= valueConditional) {\n              // mark police cells as red\n              return {\n                textAlign: 'end',\n                color: getProperLetterColor(color.hex),\n                backgroundColor: color.hex\n              };\n            }\n            return { textAlign: 'end' };\n          }\n        };\n      });\n    const columnName: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => !y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef\n        };\n      });\n\n    apiGridTotal && apiGridTotal!.setColumnDefs([...columnName, ...columnDate]);\n\n    apiGridTotal && apiGridTotal!.refreshCells();\n  };\n\n  const changeValue = (value: any) => {\n    raiseDoSearchWhenUserStoppedTypingValue(value);\n  };\n\n  const raiseDoSearchWhenUserStoppedTypingValue = debounce((value: any) => {\n    if (!isNaN(value)) {\n      changeConditionalValue(parseInt(value));\n    }\n  }, 150);\n\n  const changeConditionalValue = (value: number) => {\n    setValueConditional(value);\n    const columnDate: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef,\n          cellStyle(params: any) {\n            if (params.value >= value) {\n              // mark police cells as red\n              return {\n                textAlign: 'end',\n                color: getProperLetterColor(colorConditional),\n                backgroundColor: colorConditional\n              };\n            }\n            return { textAlign: 'end' };\n          }\n        };\n      });\n    const columnName: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => !y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef\n        };\n      });\n\n    apiGridTotal && apiGridTotal!.setColumnDefs([...columnName, ...columnDate]);\n\n    apiGridTotal && apiGridTotal!.refreshCells();\n  };\n\n  return (\n    <>\n      <div style={{ width: '100%', display: 'flex' }}>\n        <div style={{ height: '100%', width: '100%', display: 'flex' }}>\n          <VInputField\n            inline={true}\n            label={'filters'}\n            id={'value conditional'}\n            value={valueConditional}\n            onChange={changeValue}\n          />\n          <div style={{ marginLeft: '10px' }}>\n            <VColorPicker\n              height={31}\n              width={31}\n              Color={colorConditional}\n              typePickerColor={'SketchPicker'}\n              onChange={changeColors}\n            />\n          </div>\n        </div>\n        <div style={{ width: '99%' }}>\n          <VAgGrid\n            onGridReady={onGridReadyTotal}\n            columnDefs={stateGridTotal.columnDefs}\n            defaultColDef={stateGridTotal.defaultColDef}\n            rowData={stateGridTotal.rowData}\n            gridOptions={topOptions}\n            suppressContextMenu={true}\n            getContextMenuItems={getContextMenuItems}\n            animateRows={true}\n            // overlayNoRowsTemplate={templateNoData()}\n            noRowsOverlayComponent={'customNoRowsOverlay'}\n            loadingOverlayComponent={'customLoadingOverlay'}\n            frameworkComponents={{\n              customLoadingOverlay: VSpinner,\n              customNoRowsOverlay: EmptyData\n            }}\n          />\n        </div>\n      </div>\n\n      <button onClick={toggleContextualMenu}>\n        {' '}\n        {enableContextualMenu ? 'disable ' : 'enable '} Menu contextual\n      </button>\n      <button onClick={toggleVisibleColumns}>\n        {' '}\n        {hideColumns\n          ? 'hide columns, company y last name  '\n          : 'show columns, company y last name '}\n      </button>\n      <button onClick={clearTable}>\n        {clearData ? 'Populate tabla  ' : 'Clear table'}\n      </button>\n      <button onClick={onBtShowLoading}>\n        {showLoading ? 'Hide loading ' : 'Show loading'}\n      </button>\n      <button onClick={onBtScrolling}>scroll to 14-06-2019</button>\n\n      <VAgGrid\n        onGridReady={onGridReady}\n        columnDefs={getState().columnDefs}\n        defaultColDef={getState().defaultColDef}\n        rowData={getState().rowData}\n        enableRangeSelection={true}\n        onRowValueChanged={onRowValueChanged}\n        onCellValueChanged={onCellValueChanged}\n        onColumnMoved={onColumnMoved}\n        suppressContextMenu={!enableContextualMenu || suppressContextMenu()}\n        getContextMenuItems={getContextMenuItems}\n        onDragStarted={onDragStarted}\n        onDragStopped={onDragStopped}\n        animateRows={true}\n        // overlayNoRowsTemplate={templateNoData()}\n        noRowsOverlayComponent={'customNoRowsOverlay'}\n        loadingOverlayComponent={'customLoadingOverlay'}\n        frameworkComponents={{\n          customLoadingOverlay: VSpinner,\n          customNoRowsOverlay: EmptyData\n        }}\n        gridOptions={bottomOptions}\n      />\n    </>\n  );\n};\n\nexport default VAgGridDoc;\n","import React, { Component } from 'react';\nimport { IInfoPage, VPagination } from 'gsi-ui';\n\ninterface ISate {\n  allCountries: any[];\n  currentCountries: any[];\n  currentPage: number;\n  totalPages: number;\n  itemsByPage: number;\n}\n\nclass VPaginationDoc extends Component<any, ISate> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      allCountries: this.getCountry(),\n      currentCountries: [],\n      currentPage: 1,\n      totalPages: 0,\n      itemsByPage: 5\n    };\n  }\n\n  getCountry = () => {\n    return [\n      {\n        country: 'Afghanistan'\n      },\n      {\n        country: 'Albania'\n      },\n      {\n        country: 'Algeria'\n      },\n      {\n        country: 'American Samoa'\n      },\n      {\n        country: 'Andorra'\n      },\n      {\n        country: 'Angola'\n      },\n      {\n        country: 'Anguilla'\n      },\n      {\n        country: 'Antarctica'\n      },\n      {\n        country: 'Antigua and Barbuda'\n      },\n      {\n        country: 'Argentina'\n      },\n      {\n        country: 'Armenia'\n      },\n      {\n        country: 'Aruba'\n      },\n      {\n        country: 'Australia'\n      },\n      {\n        country: 'Austria'\n      },\n      {\n        country: 'Azerbaijan'\n      },\n      {\n        country: 'Bahamas'\n      },\n      {\n        country: 'Bahrain'\n      },\n      {\n        country: 'Bangladesh'\n      },\n      {\n        country: 'Barbados'\n      },\n      {\n        country: 'Belarus'\n      },\n      {\n        country: 'Belgium'\n      },\n      {\n        country: 'Belize'\n      },\n      {\n        country: 'Benin'\n      },\n      {\n        country: 'Bermuda'\n      },\n      {\n        country: 'Bhutan'\n      },\n      {\n        country: 'Bolivia'\n      },\n      {\n        country: 'Bosnia and Herzegovina'\n      },\n      {\n        country: 'Botswana'\n      },\n      {\n        country: 'Bouvet Island'\n      },\n      {\n        country: 'Brazil'\n      },\n      {\n        country: 'British Indian Ocean Territory'\n      },\n      {\n        country: 'Brunei'\n      },\n      {\n        country: 'Bulgaria'\n      },\n      {\n        country: 'Burkina Faso'\n      },\n      {\n        country: 'Burundi'\n      },\n      {\n        country: 'Cambodia'\n      },\n      {\n        country: 'Cameroon'\n      },\n      {\n        country: 'Canada'\n      },\n      {\n        country: 'Cape Verde'\n      },\n      {\n        country: 'Cayman Islands'\n      },\n      {\n        country: 'Central African Republic'\n      },\n      {\n        country: 'Chad'\n      },\n      {\n        country: 'Chile'\n      },\n      {\n        country: 'China'\n      },\n      {\n        country: 'Christmas Island'\n      },\n      {\n        country: 'Cocos (Keeling) Islands'\n      },\n      {\n        country: 'Colombia'\n      },\n      {\n        country: 'Comoros'\n      },\n      {\n        country: 'Congo'\n      },\n      {\n        country: 'The Democratic Republic of Congo'\n      },\n      {\n        country: 'Cook Islands'\n      },\n      {\n        country: 'Costa Rica'\n      },\n      {\n        country: 'Ivory Coast'\n      },\n      {\n        country: 'Croatia'\n      },\n      {\n        country: 'Cuba'\n      },\n      {\n        country: 'Cyprus'\n      },\n      {\n        country: 'Czech Republic'\n      },\n      {\n        country: 'Denmark'\n      },\n      {\n        country: 'Djibouti'\n      },\n      {\n        country: 'Dominica'\n      },\n      {\n        country: 'Dominican Republic'\n      },\n      {\n        country: 'East Timor'\n      }\n    ];\n  };\n\n  onPageChanged = (data: any) => {\n    const { currentPage, totalPages } = data.paginationData;\n\n    const offset = (currentPage - 1) * data.pageLimit;\n    // console.log('data', data);\n\n    const currentCountries = this.getCountry().slice(\n      offset,\n      offset + data.pageLimit\n    );\n    // console.log('currentCountries', currentCountries);\n    this.setState({\n      currentPage,\n      currentCountries,\n      totalPages,\n      itemsByPage: data.pageLimit\n    });\n  };\n\n  render() {\n    const { allCountries } = this.state;\n    const totalCountries = allCountries.length;\n\n    if (totalCountries === 0) return null;\n\n    return (\n      <React.Fragment>\n        <ul>\n          {this.state.currentCountries.map((x: any, index: number) => (\n            <li key={index}>{x.country}</li>\n          ))}\n        </ul>\n\n        <p>By default</p>\n        <VPagination\n          totalRecords={totalCountries}\n          pageLimit={this.state.itemsByPage}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n          currentPage={this.state.currentPage}\n          labels={{ pages: 'paginas' }}\n          customerStyle={{ borderRadius: '0px' }}\n        />\n\n        <p>Customer</p>\n\n        <VPagination\n          totalRecords={totalCountries}\n          currentPage={this.state.currentPage}\n          pageLimit={this.state.itemsByPage}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n          labels={{\n            itemsByPage: 'Elementos por paginas',\n            renderInfoDetails: this.renderInfoDetails\n          }}\n          style={{ backgroundColor: '#2D2F31', color: 'white' }}\n          customerStyle={{\n            pageSelectedBackgroundColor: '#1985A1',\n            pageSelectedColor: 'white',\n            iconColor: 'white',\n            pageHoverColor: 'black',\n            pageHoverBackgroundColor: '#1985A1',\n            borderRadius: '0px'\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderInfoDetails = (infoPage: IInfoPage) => {\n    return (\n      <div style={{ margin: '0px 10px' }}>\n        {' '}\n        {`${infoPage.currentPage}- ${infoPage.totalPages} <=> Totals ${\n          infoPage.totals\n        }  `}\n      </div>\n    );\n  };\n}\n\nexport default VPaginationDoc;\n","import React, { Component } from 'react';\nimport {\n  TypePickerColor,\n  VColorPicker,\n  VColorResult,\n  VHSLColor,\n  VRGBColor\n} from 'gsi-ui';\n\ninterface IState {\n  typePickerColor: TypePickerColor;\n  color: string | VHSLColor | VRGBColor;\n  disable: boolean;\n}\n\nclass VColorPickerDoc extends Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      typePickerColor: 'SketchPicker',\n      color: 'blue',\n      disable: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <br />\n        <button onClick={this.handleChangeTypeToSketchPicker}>\n          SketchPicker\n        </button>\n        <button onClick={this.handleChangeTypeToChromePicker}>\n          ChromePicker\n        </button>\n        <br />\n        <br />\n        <VColorPicker\n          Color={this.state.color}\n          onChange={this.handleChangeColor}\n          typePickerColor={this.state.typePickerColor}\n          position=\"right\"\n          width={30}\n          height={30}\n          disable={this.state.disable}\n        />\n        <br />\n        <button\n          onClick={() => {\n            this.setState({\n              color: 'red'\n            });\n          }}\n        >\n          change color to red\n        </button>\n\n        <button\n          onClick={() => {\n            this.setState({\n              color: 'blue'\n            });\n          }}\n        >\n          change color to blue\n        </button>\n\n        <button\n          onClick={() => {\n            this.setState({\n              disable: !this.state.disable\n            });\n          }}\n        >\n          {this.state.disable ? 'enable' : 'disable'}\n        </button>\n        <br />\n      </div>\n    );\n  }\n\n  handleChangeColor = (color: VColorResult) => {\n    this.setState({\n      color: color.rgb\n    });\n\n    // console.log(' color:', color.hex)\n  };\n\n  handleChangeTypeToChromePicker = () => {\n    this.setState({\n      typePickerColor: 'ChromePicker'\n    });\n  };\n\n  handleChangeTypeToSketchPicker = () => {\n    this.setState({\n      typePickerColor: 'SketchPicker'\n    });\n  };\n}\n\nexport default VColorPickerDoc;\n","import React, { useState } from 'react';\n\nimport { FieldState, FormState } from 'formstate';\nimport { observer } from 'mobx-react-lite';\nimport moment from 'moment';\nimport { Button } from '@blueprintjs/core';\n\nimport {\n  FileUpload,\n  Validators,\n  VBasicSliderField,\n  VCheckboxField,\n  VDateTimePicker,\n  VInputField,\n  VNumericField,\n  VRadioGroupField,\n  VSelectField,\n  VSelectMultiple,\n  VTagInputField,\n  VTextAreaField\n} from 'gsi-ui';\n\nconst store = [\n  {\n    label: 'This is a store with a very big large text',\n    value: 0\n  },\n  {\n    label: 'Store 2',\n    value: 1\n  }\n];\n\nconst sex = [\n  {\n    label: 'Male',\n    value: 'm',\n    rep: 'M'\n  },\n  {\n    label: 'Female',\n    value: 'f',\n    rep: 'F'\n  }\n];\n\nconst VInputsDoc = observer(() => {\n  const [selectValue, setSelectValue] = useState(store[0].value);\n  const form = new FormState<any>({\n    username: new FieldState(''),\n    search: new FieldState(''),\n    description: new FieldState(''),\n    store: new FieldState(''),\n    tags: new FieldState(''),\n    age: new FieldState(null),\n    have_job: new FieldState(''),\n    sex: new FieldState(''),\n    range: new FieldState(0),\n    places: new FieldState(sex[0].value),\n    date: new FieldState(moment().toDate()),\n    multiple: new FieldState([]),\n    movies: new FieldState([])\n  });\n\n  const searchingAnime = (value: any) =>\n    value.toString().indexOf('anime') !== -1 &&\n    `Can't search anime in work dude!!!!`;\n\n  const setSelectedValue = (value: any) => {\n    setSelectValue(value);\n  };\n\n  const handleSave = (element: any) => {\n    console.log(element);\n  };\n\n  const changeValueSelect = (value: any) => {\n    form.$.places.onChange('f');\n  };\n\n  const rightButton = <Button minimal icon=\"lock\" />;\n  return (\n    <React.Fragment>\n      <Button\n        text=\"Change Movies Value\"\n        onClick={() => {\n          form.$.movies.onChange([1]);\n        }}\n      />\n      <VSelectMultiple\n        inline\n        fill\n        required\n        label=\"Select movies:\"\n        options={[\n          { label: 'The Shawshank Redemption', value: 1 },\n          { label: 'The Godfather', value: 2 },\n          { label: 'The Godfather: Part II', value: 3 },\n          { label: 'The Dark Knight', value: 4 }\n        ]}\n        id=\"selectMultipleTags\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 5,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        placeholder=\"evil placeholder...\"\n        fieldState={form.$.movies}\n        onChange={() => {\n          console.log(form.$.movies.value);\n        }}\n      />\n\n      <FileUpload />\n      <VInputField\n        fieldState={form.$.username}\n        fill\n        tipLabel=\"Username\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 5,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        rightElement={rightButton}\n        id=\"username\"\n        noLabel\n        inline\n      />\n      <VInputField\n        required\n        layer={{\n          labelWidth: 6,\n          inputWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        fieldState={form.$.username}\n        id=\"username\"\n        label=\"Username\"\n        inline\n      />\n      <VInputField\n        required\n        validators={[searchingAnime, Validators.lt(10), Validators.exact(9)]}\n        fill\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        fieldState={form.$.search}\n        id=\"username\"\n        label=\"Search\"\n        inline\n        type=\"search\"\n        leftIcon=\"search\"\n      />\n      <VSelectField\n        minimal\n        defaultText=\"Please enter a text\"\n        fill\n        tipLabel=\"Movies\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        options={store}\n        inline\n        label=\"Store List\"\n        value={selectValue}\n        id=\"store\"\n        icon=\"search\"\n        onChange={setSelectedValue}\n      />\n      <Button\n        text=\"Change Select\"\n        onClick={() => {\n          setSelectedValue('s2');\n        }}\n      />\n      <VTextAreaField\n        fill\n        layer={{\n          labelWidth: 6,\n          inputWidth: 3,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"description\"\n        label=\"Description\"\n        inline\n        fieldState={form.$.description}\n      />\n      <VTagInputField\n        fill\n        limit={5}\n        tagValidation={{\n          regex: /[a-z0-9]/,\n          errorMessage: 'Is a not valid value'\n        }}\n        layer={{\n          labelWidth: 6,\n          inputWidth: 4,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"tags\"\n        fieldState={form.$.tags}\n        inline\n        label=\"Tags\"\n      />\n      <VNumericField\n        id=\"age\"\n        fieldState={form.$.age}\n        label=\"\"\n        noLabel\n        layer={{\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        inline\n      />\n      <VCheckboxField\n        checkBoxAtLeft\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'start',\n          inputOrientation: 'end'\n        }}\n        fieldState={form.$.have_job}\n        id=\"have_job\"\n        label=\"Have a job?\"\n        inline\n        alignIndicator=\"right\"\n      />\n      <VRadioGroupField\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"Sex\"\n        options={sex}\n        label=\"Sex\"\n        inline\n        fieldState={form.$.sex}\n      />\n      <VBasicSliderField\n        fill\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"range\"\n        fieldState={form.$.range}\n        label=\"Range\"\n        inline\n      />\n      <VDateTimePicker\n        required\n        fill\n        inline\n        layer={{\n          inputWidth: 5,\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        label=\"TimePicker\"\n        dateType=\"DATE\"\n        format=\"MM/DD/YYYY\"\n        id=\"date\"\n        fieldState={form.$.date}\n        icon={{ iconName: 'calendar' }}\n      />\n      <div>\n        <VSelectField\n          defaultText=\"Please enter a text\"\n          layer={{\n            labelWidth: 6,\n            inputWidth: 2,\n            labelOrientation: 'end',\n            inputOrientation: 'start'\n          }}\n          iconOnly\n          icon=\"search\"\n          inline\n          label=\"Places\"\n          options={sex}\n          id=\"places\"\n          fieldState={form.$.places}\n        />\n        <button onClick={changeValueSelect}>change value select</button>\n      </div>\n    </React.Fragment>\n  );\n});\nexport default VInputsDoc;\n","import React, { Component } from 'react';\nimport { DnDList, DragAndDropList, IDNDList } from 'gsi-ui';\nimport { H1 } from '@blueprintjs/core';\n\nconst list: IDNDList[] = [\n  {\n    id: '1',\n    label: 'List 1',\n    list: [\n      {\n        label: 'Item 1',\n        value: '1'\n      },\n      {\n        label: 'Item 2',\n        value: '2'\n      },\n      {\n        label: 'Item 3',\n        value: '3'\n      },\n      {\n        label: 'Item 4',\n        value: '4'\n      }\n    ]\n  },\n  {\n    id: '2',\n    label: 'List 2',\n    list: [\n      {\n        label: 'Item 5',\n        value: '5'\n      },\n      {\n        label: 'Item 6',\n        value: '6'\n      },\n      {\n        label: 'Item 7',\n        value: '7'\n      },\n      {\n        label: 'Item 8',\n        value: '8'\n      }\n    ]\n  },\n  {\n    id: '3',\n    label: 'List 3',\n    list: [\n      {\n        label: 'Item 9',\n        value: '9'\n      },\n      {\n        label: 'Item 10',\n        value: '10'\n      },\n      {\n        label: 'Item 11',\n        value: '11'\n      },\n      {\n        label: 'Item 12',\n        value: '12'\n      }\n    ]\n  }\n];\nconst style = {\n  height: '100px',\n  backgroundColor: '#90beee',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'start'\n};\n\nconst items = [\n  {\n    id: '1',\n    content: (\n      <div style={style}>\n        <img height={'100px'} src={'https://picsum.photos/100'} />\n        <span style={{ marginLeft: 5 }}>Item1</span>\n      </div>\n    )\n  },\n  {\n    id: '2',\n    content: (\n      <div style={style}>\n        <img height={'100px'} src={'https://picsum.photos/100'} />\n        <span style={{ marginLeft: 5 }}>Item2</span>\n      </div>\n    )\n  },\n  {\n    id: '3',\n    content: (\n      <div style={style}>\n        <img height={'100px'} src={'https://picsum.photos/100'} />\n        <span style={{ marginLeft: 5 }}>Item3</span>\n      </div>\n    )\n  }\n];\n\nconst NewDndList = () => {\n  return (\n    <DnDList\n      list={items}\n      direction={'vertical'}\n      paddingList={'2px'}\n      width={'50px'}\n    />\n  );\n};\n\nclass VDragAndDropDoc extends Component<{}, {}> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <DragAndDropList\n          list={list}\n          containerOrientation=\"horizontal\"\n          onDragAndDrop={output => console.log(output)}\n        />\n        <H1>New Drag & Drop Component.</H1>\n        <NewDndList />\n      </>\n    );\n  }\n}\n\nexport default VDragAndDropDoc;\n","import React, { Component } from 'react';\nimport { Button } from '@blueprintjs/core';\nimport styled from 'styled-components';\nimport {\n  IToastNotificationProps,\n  showToastNotification,\n  VCardPanel,\n  VSpinner\n} from 'gsi-ui';\n\nexport const RowButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nclass VNotificationToastDocs extends Component {\n  buttonsHeaderRow = () => (\n    <RowButtons>\n      <VSpinner color=\"#fff\" size={20} />\n      <Button minimal icon=\"plus\" text=\"New\" />\n      <Button minimal icon=\"edit\" text=\"Edit\" />\n    </RowButtons>\n  );\n\n  render() {\n    const propsList: IToastNotificationProps[] = [\n      {\n        type: 'success',\n        message:\n          'This is a basic Success notification, Congratulations you do it well'\n      },\n      {\n        type: 'warning',\n        message:\n          'This is a basic Warning notification, be careful with what are you doing'\n      },\n      {\n        type: 'danger',\n        message: 'This is a basic danger notification, something went wrong'\n      },\n      {\n        type: 'primary',\n        message: 'This is a primary notification, just normal, but Blue ;)'\n      },\n      {\n        type: 'none',\n        message: 'This is a normal notification, use it at your will'\n      },\n      {\n        type: 'primary',\n        message: (\n          <>\n            This is a more complex Toast notification is much like the one in\n            the documentation <em>but better :)</em> it will print in the\n            console just before this one banish and has a duration of\n            <em>5 s (5000 ms)</em> form more documentation:{' '}\n            <a\n              href=\"https://blueprintjs.com/docs/#core/components/toast\"\n              target=\"_blank\"\n            >\n              the documentation\n            </a>\n            , you can even pass a React component OMG!!!\n          </>\n        ),\n        timeout: 5000,\n        onDismiss: () => console.log('notification dismissed'),\n        action: {\n          href: 'https://blueprintjs.com/docs/#core/components/toast',\n          target: '_blank',\n          text: <strong>This navigate to the site too</strong>\n        }\n      }\n    ];\n\n    return (\n      <div style={{ padding: '25px' }}>\n        <VCardPanel\n          headerText=\"Testing Custom Header Panel\"\n          headerCustomComponent={this.buttonsHeaderRow()}\n        />\n        {propsList.map((props, index) => {\n          const text =\n            index === propsList.length - 1\n              ? 'Complex Notification'\n              : props.type;\n          return (\n            <Button\n              key={index}\n              intent={props.type}\n              text={text}\n              style={{ marginRight: '5px' }}\n              onClick={() => showToastNotification(props)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default VNotificationToastDocs;\n","import React from 'react';\nimport { VCarousel, VInputField, VTextAreaField } from 'gsi-ui';\n\nconst elementsCarousel: any = [\n  <VInputField\n    layer={{\n      labelWidth: 6,\n      inputWidth: 6,\n      labelOrientation: 'end',\n      inputOrientation: 'center'\n    }}\n    value=\"\"\n    id=\"username\"\n    label=\"Username\"\n    inline\n  />,\n  <VTextAreaField\n    fill\n    layer={{\n      labelWidth: 6,\n      inputWidth: 3,\n      labelOrientation: 'end',\n      inputOrientation: 'start'\n    }}\n    id=\"description\"\n    label=\"Description\"\n    inline\n    value=\"\"\n  />,\n  <VTextAreaField\n    fill\n    layer={{\n      labelWidth: 6,\n      inputWidth: 3,\n      labelOrientation: 'end',\n      inputOrientation: 'start'\n    }}\n    id=\"description\"\n    label=\"Description\"\n    inline\n    value=\"\"\n  />\n];\n\nconst VCarouselDoc = () => {\n  return (\n    <VCarousel\n      height=\"200px\"\n      width=\"500px\"\n      elements={elementsCarousel}\n      buttonsJustify=\"flex-end\"\n    />\n  );\n};\n\nexport default VCarouselDoc;\n","import React, { Component } from 'react';\nimport { VLoadProgressTask } from 'gsi-ui';\nimport { Button } from '@blueprintjs/core';\n\ninterface IState {\n  open: boolean;\n}\nclass VLoadProgressDoc extends Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button onClick={this.openProgress}>Open Task</Button>\n        <VLoadProgressTask\n          onClose={() => this.setState({ open: false })}\n          isOpen={this.state.open}\n          title=\"Import Account\"\n          icon=\"import\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  openProgress = (event: any) => {\n    this.setState({ open: true });\n    setTimeout(() => {\n      this.setState({\n        open: false\n      });\n    }, 5000);\n  };\n}\n\nexport default VLoadProgressDoc;\n","import React, { Component } from 'react';\nimport { VSuspenseLoading } from 'gsi-ui';\n\nconst Table = React.lazy(() => {\n  return Promise.all([\n    import('../table/VTableWithWidget'),\n    new Promise(resolve => setTimeout(resolve, 3000))\n  ]).then(([moduleExports]) => moduleExports);\n});\n\nclass VSuspenseDoc extends Component<{}, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={{ width: 600 }}>\n        <VSuspenseLoading>\n          <Table />\n        </VSuspenseLoading>\n      </div>\n    );\n  }\n}\n\nexport default VSuspenseDoc;\n","import React, { Component } from 'react';\nimport { ITabsPanelTypes, VTabsPanel } from 'gsi-ui';\n\nclass VTabsPanelDoc extends Component {\n  render() {\n    const tabList: ITabsPanelTypes[] = [\n      {\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        content: <p>Hello</p>,\n        key: '1'\n      },\n      {\n        label: 'Hogar',\n        key: '2',\n        dataBadge: 3,\n        content: <span>World </span>\n      },\n      {\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        label: 'deliveries actives for now',\n        key: '3',\n        dataBadge: 12,\n        content: <h3>it's me</h3>\n      }\n    ];\n    const FirstTabList: ITabsPanelTypes[] = [\n      {\n        label: 'Container Tab',\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        content: (\n          <div style={{ padding: '5px' }}>\n            <VTabsPanel\n              size=\"small\"\n              backgroundColor=\"white\"\n              padding=\"10px 25px\"\n              tabList={tabList}\n              activeBorderColor=\"red\"\n              active=\"3\"\n              beforeChangeTabValidation\n              handleChange={this.handelChangeTab}\n              tabsAlertProps={{\n                confirmButtonText: 'Confirm',\n                cancelButtonText: 'Stay in tab',\n                canEscapeKeyCancel: true,\n                bodyText:\n                  'Are you sure you want to change the tab, changes will be lost',\n                intent: 'success'\n              }}\n            />\n          </div>\n        ),\n        key: '1'\n      }\n    ];\n    return (\n      <div style={{ padding: '25px' }}>\n        <VTabsPanel\n          backgroundColor=\"antiquewhite\"\n          size=\"small\"\n          padding=\"10px 25px\"\n          tabList={FirstTabList}\n          activeBorderColor=\"red\"\n          active=\"1\"\n          handleChange={this.handelChangeTab}\n        />\n      </div>\n    );\n  }\n\n  handelChangeTab = (tab: ITabsPanelTypes) => {};\n}\n\nexport default VTabsPanelDoc;\n","import React from 'react';\nimport { VOrgChart } from 'gsi-ui';\n\nconst dataSource = {\n  name: 'Hierarchy',\n  title: 'Vertrax',\n  id: 'root',\n  children: [\n    { name: 'LaTank', title: 'Company', className: 'Company', id: 1 },\n    {\n      name: 'LaTank2',\n      title: 'Company',\n      className: 'Company',\n      id: 2,\n      children: [\n        {\n          name: 'Los Angeles Mx',\n          title: 'Terminal',\n          className: 'Terminal',\n          id: 7\n        },\n        {\n          name: 'California',\n          title: 'Terminal',\n          className: 'Terminal',\n          id: 8\n        }\n      ]\n    },\n    { name: 'La Tank 3', title: 'Company', className: 'Company', id: 3 },\n    {\n      name: 'La Tank 4',\n      title: 'Company',\n      className: 'Company',\n      id: 4,\n      children: [\n        { name: 'Texas', title: 'Terminal', className: 'Terminal', id: 9 },\n        { name: 'Austin', title: 'Terminal', className: 'Terminal', id: 10 }\n      ]\n    }\n  ]\n};\n\nconst VOrgChartDoc = () => {\n  const onReorderHierarchy = (data: any) => {\n    console.log(data);\n  };\n\n  const onClickCompany = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <VOrgChart\n      dataSource={dataSource}\n      onReorder={onReorderHierarchy}\n      onClick={onClickCompany}\n      draggable\n    />\n  );\n};\n\nexport default VOrgChartDoc;\n","import React from 'react';\nimport { Divider, H1, H2, Pre } from '@blueprintjs/core';\nimport { HomeContainer } from './styled';\n\nconst Home = () => {\n  return (\n    <HomeContainer>\n      <H1 className=\"bp3-heading\">GSI-VX-UI</H1>\n      <Divider />\n      <p className=\"bp3-text-muted bp3-text-large\">\n        It's an extension of the blueprint framework. It has other components\n        that are not included in blueprintjs.\n      </p>\n      <H2 className=\"bp3-heading\">Components</H2>\n      <Divider />\n      <Pre>\n        <ul className=\"bp3-list\">\n          <li>\n            VTable - Extension of @blueprintjs/table, added multiple\n            functionalities.\n          </li>\n          <li>VBadge - Native component, not libraries.</li>\n          <li>VCardPanel - Configurable Card, uses Card @blueprintjs/core.</li>\n          <li>\n            VColorPicker - Color Picker Component uses the library react-color.\n          </li>\n          <li>\n            VDragAndDropList - Drag and Drop List Component use the library\n            react-beautiful-dnd.\n          </li>\n          <li>VPaginator - Native Paginator Component, not libraries.</li>\n          <li>\n            VProgressLabel - Native Component, not libraries. Useful to\n            represent multiples progress bar.\n          </li>\n          <li>VCarousel - Native Component, uses react-pose for animations.</li>\n          <li>VSelectionList - Native Component.</li>\n          <li>\n            VSelectUnselectItems - Native Component to switch items between\n            lists.\n          </li>\n          <li>VSpinner - Extension of @blueprintjs/core Spinner.</li>\n          <li>VSuspenseLoadint - Extension of Suspense component of React.</li>\n          <li>\n            VTabsMenu - Extension of @blueprintjs/core Tabs. added customizable\n            functions.\n          </li>\n          <li>VToastNotification - Extension of @blueprintjs/core Toaster.</li>\n          <li>\n            VOrgChart - Native Component uses orgchart library. Useful to\n            represent hierarchies.\n          </li>\n        </ul>\n      </Pre>\n    </HomeContainer>\n  );\n};\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin: 0px 10px;\n\n`;\n\nexport const ContainerEditor = styled.div`\nbackground-color: #555;\ncolor:whitesmoke;\npadding: 10px;\n`;\n\n\nexport const TagEditor = styled.span`\ncolor:#ffc863;\n`;\n\nexport const PropertyEditor = styled.span`\ncolor:whitesmoke;\n`;\n\nexport const ImportTag = styled.strong`\nbackground-color: #555;\ncolor:#ffc863;\npadding: 0px 6px;\nfont-style: italic;\n`;\n\nexport const NoteTag = styled.strong`\ncolor: #8e8e8e;\nfont-style: oblique;\nfont-weight: 700;\n`;\n\nexport const H4Pointer = styled.h4`\ncursor: pointer;\n`;\n\nexport const H3Pointer = styled.h5`\ncursor: pointer;\nmargin-left: 13px !important;\n`;","import React from 'react';\nimport {VTable} from \"gsi-ui\";\n\nexport const faker = require('faker');\n\nexport interface IProps {\n    striped?: boolean\n    countData?:number\n}\n\nexport const DefaultTableBlueprintSample = (props:IProps) => {\n\n    const getData = () => {\n\n        const count = props.countData?props.countData : 8;\n        const data: any[] = [];\n        for (let i = 0; i < count; i++) {\n\n            const firstName = faker.name.firstName();\n            const lastName = faker.name.lastName();\n\n            data.push({\n                name: firstName,\n                lastName: lastName,\n                phone: faker.phone.phoneNumber(),\n                company: faker.company.companyName(),\n                email: faker.internet.email(firstName, lastName, 'generalsoftwareinc.com'),\n                notes: faker.lorem.sentence(),\n\n            })\n        }\n        return data;\n    };\n\n\n    const getColumnsName = () => {\n        return {\n            name: 'Name',\n            lastName: 'Last Name',\n            phone: 'Phone',\n            email: 'Email',\n            company: 'Company',\n            notes: 'Notes',\n        }\n    };\n\n    return (<>\n        <VTable\n            columns={['name', 'lastName', 'phone', 'email', 'company', 'notes']}\n            data={getData()}\n            columns_name={getColumnsName()}\n            striped={props.striped}\n\n        />\n    </>)\n};","import React from 'react';\nimport { PropertyEditor, TagEditor} from \"./style\";\n\nexport interface IProps {\n    name:string,\n    property?:string\n    children?: any,\n    inline?:boolean,\n    showPropertiesInPreTag?:boolean\n}\n\nexport const TagCode =(props:IProps)=>{\n\n\n    if(props.inline){\n        return (<>\n            <TagEditor>\n                {`<${props.name} `}\n                <PropertyEditor>\n                    {props.showPropertiesInPreTag?(  <pre style={{margin:'0px'}}>\n                    {props.property}\n                    </pre>):  props.property}\n\n                </PropertyEditor>\n                {' />'}\n\n            </TagEditor>\n\n        </>)\n    }\n\n    return (<>\n        <TagEditor>\n            {`<${props.name} `}\n            <PropertyEditor>\n                {props.property}\n            </PropertyEditor>\n            {' >'}\n            <div style={{padding:'5px 24px'}}>\n                {props.children}\n            </div>\n            <TagEditor> {`</${props.name}>`}</TagEditor>\n\n\n\n        </TagEditor>\n\n    </>)\n\n};","import React, {  useState } from 'react';\nimport { Card, Divider, Collapse } from '@blueprintjs/core';\nimport { VTabsPanel } from 'gsi-ui';\nimport { DefaultTableBlueprintSample } from './DefaultTable';\nimport {\n  ContainerEditor,\n  H4Pointer,\n  ImportTag,\n  NoteTag\n} from '../../../style';\nimport { TagCode } from '../../../Edito';\n\nexport const DefaultTableDocs = () => {\n  const [defaultCollapse, setDefaultCollapse] = useState<boolean>(true);\n  const code = () => {\n    return (\n      <ContainerEditor style={{ height: '60vh', overflowY: 'auto' }}>\n        <pre>\n          {`const getData = () => {\n\n        const data: any[] = [];\n        for (let i = 0; i < 8; i++) {\n\n            const firstName = faker.name.firstName();\n            const lastName = faker.name.lastName();\n\n            data.push({\n                name: firstName,\n                lastName: lastName,\n                phone: faker.phone.phoneNumber(),\n                company: faker.company.companyName(),\n                email: faker.internet.email(firstName, lastName, 'generalsoftwareinc.com'),\n                notes: faker.lorem.sentence(),\n\n            })\n        }\n        return data;\n    };`}\n        </pre>\n        <br />\n        <pre>\n          {` const getColumnsName = () => {\n        return {\n            name: 'Name',\n            lastName: 'Last Name',\n            phone: 'Phone',\n            email: 'Email',\n            company: 'Company',\n            notes: 'Notes',\n        }\n    };`}\n        </pre>\n        <br />\n        <br />\n        <TagCode\n          showPropertiesInPreTag\n          name={'VTable'}\n          property={` columns={['name', 'lastName', 'phone', 'email', 'company', 'notes']} \\n data={getData()}\\n columns_name={getColumnsName()}`}\n          inline\n        />\n      </ContainerEditor>\n    );\n  };\n\n  const toggleDefaultCollapse = (key: 'default') => {\n    switch (key) {\n      case 'default': {\n        setDefaultCollapse(!defaultCollapse);\n        break;\n      }\n    }\n  };\n\n  return (\n    <>\n      <H4Pointer\n        onClick={() => toggleDefaultCollapse('default')}\n        className=\"bp3-heading\"\n      >\n        Default\n      </H4Pointer>\n\n      <Divider />\n      <Collapse transitionDuration={1000} isOpen={defaultCollapse}>\n        <VTabsPanel\n          size=\"small\"\n          backgroundColor=\"white\"\n          padding=\"0px\"\n          tabList={[\n            {\n              label: 'Sample',\n              key: 'sample',\n              content: (\n                <div style={{ padding: '10px ' }}>\n                  <DefaultTableBlueprintSample />\n                </div>\n              )\n            },\n            {\n              label: 'Code',\n              key: 'code',\n              content: <>{code()}</>\n            }\n          ]}\n          activeBorderColor=\"#175dbf\"\n          active=\"sample\"\n          handleChange={() => {}}\n        />\n        <Card style={{ marginTop: '5px' }}>\n          <p\n            className=\"bp3-text-muted bp3-text-large\"\n            style={{ marginTop: '15px' }}\n          >\n            Para definir una tabla es necesario importar{' '}\n            <ImportTag>{`import {VTable} from \"gsi-ui\"`}</ImportTag>. La tabla\n            tiene 2 propiedades requeridas : <NoteTag> columns </NoteTag> ,\n            arreglo con los key de las columnas que{' '}\n            <NoteTag> tienen que ser únicos </NoteTag> y la propiedad{' '}\n            <NoteTag>data</NoteTag> : que es un arreglo con un objeto de\n            <NoteTag>{` { [key] : value}`}</NoteTag>, donde{' '}\n            <NoteTag> {`key`}</NoteTag> tiene que correspoder con una de las key\n            del arreglo <NoteTag> columns </NoteTag>\n          </p>\n\n          <p className=\"bp3-text-muted bp3-text-large\">\n            Para personalizar los encabezado solo tiene que setear la propiedad{' '}\n            <NoteTag>columns_name </NoteTag>\n            con un objeto <NoteTag>{`{ [key] : value}`}</NoteTag>, donde{' '}\n            <NoteTag> {`key`}</NoteTag> tiene que correspoder con una de las key\n            del arreglo <NoteTag> columns </NoteTag> como muestra el ejemplo\n          </p>\n\n          <p className=\"bp3-text-muted bp3-text-large\">\n            Para poner la tabla en modo stripped solo tiene que agregarle la\n            propiedad <NoteTag> stripped </NoteTag>\n            que es de tipo boolean como se muestra en el ejemplo de abajo\n          </p>\n          <ContainerEditor>\n            <TagCode\n              name={'VTable'}\n              inline\n              property={'{...otherProperties} striped'}\n            />\n          </ContainerEditor>\n          <DefaultTableBlueprintSample countData={3} striped />\n        </Card>\n      </Collapse>\n    </>\n  );\n};\n","import React, {  useState } from 'react';\nimport { CellSelectionType, VSelectField, VTable } from 'gsi-ui';\nimport { IRegion } from '@blueprintjs/table';\nimport { Button } from '@blueprintjs/core';\n\nexport const faker = require('faker');\n\nexport interface IProps {\n  countData?: number;\n}\n\nconst optionsTypeSelection = () => {\n  return ['FREE', 'CELL', 'ENTIRE_ROW', 'MULTIPLE_ENTIRE_ROWS'];\n};\n\nexport const TypeSelectionTableBlueprintSample = (props: IProps) => {\n  const [typeSelection, setTypeSelection] = useState<CellSelectionType>('FREE');\n  const [elementSelected, setElementSelected] = useState();\n  const [regionSelected, setRegionSelected] = useState();\n  const [regions, setRegions] = useState();\n  const [doubleClick, setDoubleClick] = useState();\n  const [styleSelection, setStyleSelection] = useState();\n\n  const getData = () => {\n    const count = props.countData ? props.countData : 8;\n    const data: any[] = [];\n    for (let i = 0; i < count; i++) {\n      const firstName = faker.name.firstName();\n      const lastName = faker.name.lastName();\n\n      data.push({\n        name: firstName,\n        lastName: lastName,\n        phone: faker.phone.phoneNumber(),\n        company: faker.company.companyName(),\n        email: faker.internet.email(\n          firstName,\n          lastName,\n          'generalsoftwareinc.com'\n        ),\n        notes: faker.lorem.sentence()\n      });\n    }\n    return data;\n  };\n\n  const getColumnsName = () => {\n    return {\n      name: 'Name',\n      lastName: 'Last Name',\n      phone: 'Phone',\n      email: 'Email',\n      company: 'Company',\n      notes: 'Notes'\n    };\n  };\n\n  const handleChangeType = (value: any) => {\n    setTypeSelection(value);\n  };\n\n  const onSelectionChange = (value: any) => {\n    setElementSelected(value);\n  };\n\n  const onRegionsChange = (regions: IRegion[]) => {\n    setRegionSelected(regions);\n  };\n  const onDoubleClick = (\n    value: any,\n    rowIndex: number,\n    columnIndex: number,\n    columnName: string\n  ) => {\n    setDoubleClick({\n      value,\n      rowIndex,\n      columnIndex,\n      columnName\n    });\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ padding: '5px', width: ' 500px' }}>\n          <VSelectField\n            value={typeSelection}\n            label={'Type selection'}\n            filterable={false}\n            options={optionsTypeSelection().map(x => {\n              return { label: x, value: x };\n            })}\n            onChange={handleChangeType}\n            id={'type'}\n            layer={{\n              inputWidth: 6,\n              labelWidth: 6\n            }}\n          />\n        </div>\n        <div style={{ padding: '5px' }}>\n          <Button\n            onClick={() => {\n              setRegions([{ cols: [0, 5], rows: [5, 5] }]);\n            }}\n          >\n            {' '}\n            seleccionar fila 5\n          </Button>\n        </div>\n          <div style={{ padding: '5px' }}>\n              <Button\n                  onClick={() => {\n                    setStyleSelection({\n                        backgroundColor: 'rgba(34, 220, 72, 0.16);',\n                        borderColor: 'green',\n                        borderRadius: '15'\n                    })\n                  }}\n              >\n                  {' '}\n                  Change style selection\n              </Button>\n          </div>\n      </div>\n\n      <VTable\n        columns={['name', 'lastName', 'phone', 'email', 'company', 'notes']}\n        data={getData()}\n        columns_name={getColumnsName()}\n        striped\n        cellSelectionType={typeSelection}\n        actionsSelection={{\n          onSelectionChange: onSelectionChange,\n          onRegionsChange: onRegionsChange,\n          onDoubleClick: onDoubleClick\n        }}\n        regions={regions}\n        selectionStyle={styleSelection}\n      />\n      <br />\n      <div style={{ display: 'flex' }}>\n        <strong> Seleccionado : </strong>\n        {!elementSelected ? (\n          <span style={{ marginRight: '5px' }}> no seleccionado </span>\n        ) : (\n          <pre\n            style={{\n              height: '100px',\n              overflowY: 'auto',\n              margin: '0px'\n            }}\n          >\n            {JSON.stringify(elementSelected, undefined, 2)}\n          </pre>\n        )}\n\n        <strong> Región : </strong>\n        {!regionSelected ? (\n          <span style={{ marginRight: '5px' }}> no seleccionada </span>\n        ) : (\n          <pre\n            style={{\n              height: '100px',\n              overflowY: 'auto',\n              width: '20%',\n              margin: '0px'\n            }}\n          >\n            {JSON.stringify(regionSelected, undefined, 2)}\n          </pre>\n        )}\n      </div>\n      <br />\n      <div style={{ display: 'flex' }}>\n        <strong> Double click : </strong>\n        {!doubleClick ? (\n          <span style={{ marginRight: '5px' }}> no seleccionado </span>\n        ) : (\n          <pre\n            style={{\n              height: '100px',\n              overflowY: 'auto',\n              margin: '0px'\n            }}\n          >\n            {JSON.stringify(doubleClick, undefined, 2)}\n          </pre>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, {useState} from 'react';\nimport {Card, Divider, Collapse, Pre} from '@blueprintjs/core';\nimport {VCardPanel, VTable, VTabsPanel} from 'gsi-ui';\nimport {\n    ContainerEditor,\n    H4Pointer,\n    NoteTag\n} from '../../../style';\nimport {TagCode} from '../../../Edito';\nimport {TypeSelectionTableBlueprintSample} from './TypeSelectionTable';\nimport {codeProperties, codeSample} from \"./codeTypeSelectionSample\";\n\nexport const TypeSelectionTableTableDocs = () => {\n    const [defaultCollapse, setDefaultCollapse] = useState<boolean>(true);\n\n    const code = () => {\n        return (\n            <ContainerEditor style={{height: '60vh', overflowY: 'auto'}}>\n          <pre style={{margin: '0px'}}>\n              {codeSample()}\n          </pre>\n\n                <TagCode\n                    name={'VTable'}\n                    property={codeProperties()}\n                    inline\n                    showPropertiesInPreTag\n                />\n            </ContainerEditor>\n        );\n    };\n\n    const toggleDefaultCollapse = (key: 'default') => {\n        switch (key) {\n            case 'default': {\n                setDefaultCollapse(!defaultCollapse);\n                break;\n            }\n        }\n    };\n\n    return (\n        <>\n            <H4Pointer\n                onClick={() => toggleDefaultCollapse('default')}\n                className=\"bp3-heading\"\n            >\n                Type Selection\n            </H4Pointer>\n\n            <Divider/>\n            <Collapse transitionDuration={1000} isOpen={defaultCollapse}>\n                <p\n                    className=\"bp3-text-muted bp3-text-large\"\n                    style={{marginTop: '15px'}}\n                >\n                    La tabla posee varios tipo de selección, para configurarla solo tiene\n                    que setear la propiedad\n                    <NoteTag> cellSelectionType</NoteTag> la cual posee los siguiente\n                    tipos{' '}\n                </p>\n                <Pre>\n          <ul className=\"bp3-list\">\n            <li>FREE: Puede seleccionar ......</li>\n            <li>CELL: Puede seleccionar ......</li>\n            <li>MULTIPLE_ENTIRE_ROWS: Puede seleccionar ......</li>\n            <li>DISABLED: Puede seleccionar ......</li>\n          </ul>\n        </Pre>\n\n                <p\n                    className=\"bp3-text-muted bp3-text-large\"\n                    style={{marginTop: '15px'}}\n                >\n                    En el ejemplo de abajo se muestra una tabla con las configuraciónes que se le pueden adcionar, con\n                    respecto a todo lo relacionado con la selección\n                </p>\n\n                <VTabsPanel\n                    size=\"small\"\n                    backgroundColor=\"white\"\n                    padding=\"0px\"\n                    tabList={[\n                        {\n                            label: 'Sample',\n                            key: 'sample',\n                            content: (\n                                <div style={{padding: '10px '}}>\n                                    <TypeSelectionTableBlueprintSample/>\n                                </div>\n                            )\n                        },\n                        {\n                            label: 'Code',\n                            key: 'code',\n                            content: <>{code()}</>\n                        }\n                    ]}\n                    activeBorderColor=\"#175dbf\"\n                    active=\"sample\"\n                    handleChange={() => {\n                    }}\n                />\n                <Card style={{marginTop: '5px'}}>\n                    <p\n                        className=\"bp3-text-muted bp3-text-large\"\n                        style={{marginTop: '15px'}}\n                    >\n                        En el ejemplo de anterior .....\n                    </p>\n                </Card>\n            </Collapse>\n        </>\n    );\n};\n","import React from \"react\";\n\n\nexport const codeSample=()=>{\n\n    return `\n// NOTE: CellSelectionType : 'FREE', 'CELL', 'ENTIRE_ROW', 'MULTIPLE_ENTIRE_ROWS'\n\nimport { CellSelectionType } from 'gsi-ui';\nimport { IRegion } from '@blueprintjs/table';\n\n  const typeSelection: CellSelectionType = 'FREE';\n  const regions: IRegions[] = [{ cols: [0, 5], rows: [5, 5] }];\n  const [styleSelection, setStyleSelection] = useState();\n\n              \n const onSelectionChange = (value: any) => {\n    setElementSelected(value);\n  };\n\n  const onRegionsChange = (regions: IRegion[]) => {\n    setRegionSelected(regions);\n  };\n\n  const onDoubleClick = ( value: any, rowIndex: number, columnIndex: number, columnName: string ) => {\n    setDoubleClick({ value, rowIndex, columnIndex,  columnName });\n  };`\n};\n\nexport const codeProperties=()=>{\n    return `{...otherProperties\\n cellSelectionType={typeSelection}\\n actionsSelection={{\n        onSelectionChange: onSelectionChange,\n        onRegionsChange: onRegionsChange,\n        onDoubleClick: onDoubleClick\n                }}\nregions={regions}\nselectionStyle={styleSelection}`\n\n};","import React, { useState} from 'react';\nimport {VTable} from \"gsi-ui\";\n\nexport const faker = require('faker');\n\nexport interface IProps {\n    striped?: boolean\n    countData?: number\n}\n\nexport const HeaderSetupTableBlueprintSample = (props: IProps) => {\n\n\n    const [columns,setColumns]=useState<string[]>(['name', 'lastName', 'phone', 'email', 'company', 'notes']);\n    const getData = () => {\n\n        const count = props.countData ? props.countData : 8;\n        const data: any[] = [];\n        for (let i = 0; i < count; i++) {\n\n            const firstName = faker.name.firstName();\n            const lastName = faker.name.lastName();\n\n            data.push({\n                name: firstName,\n                lastName: lastName,\n                phone: faker.phone.phoneNumber(),\n                company: faker.company.companyName(),\n                email: faker.internet.email(firstName, lastName, 'generalsoftwareinc.com'),\n                notes: faker.lorem.sentence(),\n\n            })\n        }\n        return data;\n    };\n\n    const getConfigStyleHeader = () => {\n        return [\n            {\n                column: 'name',\n                textColor: 'white',\n                backgroundColor: '#DB2C6F',\n                textAlign: 'left'\n            },\n            {\n                column: 'lastName',\n                textColor: 'white',\n                backgroundColor: '#634DBF'\n            },\n            {\n                column: 'phone',\n                textColor: 'white',\n                backgroundColor: '#D13913'\n            },\n            {\n                column: 'email',\n                textColor: 'white',\n                backgroundColor: '#308c8a',\n                textAlign: 'end'\n            },\n            {\n                column: 'company',\n                textColor: 'white',\n                backgroundColor: '#e5504f',\n                textAlign: 'end'\n            },\n            {\n                column: 'notes',\n                textColor: 'white',\n                backgroundColor: '#238C2C',\n                textAlign: 'end'\n            }\n        ]\n    };\n\n    const getColumnsName = () => {\n        return {\n            name: 'Name',\n            lastName: 'Last Name',\n            phone: 'Phone',\n            email: 'Email',\n            company: 'Company',\n            notes: 'Notes',\n        }\n    };\n\n    return (<>\n        <VTable\n            columns={columns}\n            data={getData()}\n            columns_name={getColumnsName()}\n            configColumnsHeader={getConfigStyleHeader()}\n            reordering={true}\n            onOrderColumns={(columns: string[]) => setColumns(columns)}\n            enableColumnResizing={true}\n            columnWidths={[250, 125, 150, 200]}\n            striped\n\n        />\n    </>)\n};","import {ContainerEditor, H3Pointer} from \"../../../../style\";\nimport {TagCode} from \"../../../../Edito\";\nimport React, {useState} from \"react\";\nimport {Card, Collapse, Divider} from \"@blueprintjs/core\";\nimport {VTabsPanel} from \"gsi-ui\";\nimport {HeaderSetupTableBlueprintSample} from \"./SetupHeaderTable\";\nimport {codeProperties, codeSample} from \"./codeColorHeaderTableSample\";\n\n\nexport const SetupColorHeaderTableDocs =()=>{\n\n    const [headerColorCollapse, setHeaderColorCollapse] = useState<boolean>(true);\n\n    const toggleDefaultCollapse = (key: 'headerColorCollapse') => {\n        switch (key) {\n\n            case 'headerColorCollapse': {\n                setHeaderColorCollapse(!headerColorCollapse);\n                break;\n            }\n        }\n    };\n\n    const code = () => {\n        return (\n            <ContainerEditor style={{ height: '60vh', overflowY: 'auto' }}>\n\n                <pre style={{margin:'0px'}}>\n                    {codeSample()}\n                </pre>\n\n                <TagCode\n                    showPropertiesInPreTag\n                    name={'VTable'}\n                    property={codeProperties()}\n                    inline\n                />\n            </ContainerEditor>\n        );\n    };\n\n    return (<>\n\n        <H3Pointer\n            onClick={() => toggleDefaultCollapse('headerColorCollapse')}\n            className=\"bp3-heading\"\n        >\n            Header Color, Align, Resizing and Reordering Setting\n        </H3Pointer>\n        <Divider />\n        <Collapse transitionDuration={1000} isOpen={headerColorCollapse}>\n\n            <VTabsPanel\n                size=\"small\"\n                backgroundColor=\"white\"\n                padding=\"0px\"\n                tabList={[\n                    {\n                        label: 'Sample',\n                        key: 'sample',\n                        content: (\n                            <div style={{ padding: '10px ' }}>\n                                <HeaderSetupTableBlueprintSample />\n                            </div>\n                        )\n                    },\n                    {\n                        label: 'Code',\n                        key: 'code',\n                        content: <>{code()}</>\n                    }\n                ]}\n                activeBorderColor=\"#175dbf\"\n                active=\"sample\"\n                handleChange={() => {}}\n            />\n            <Card style={{ marginTop: '5px' }}>\n                <p\n                    className=\"bp3-text-muted bp3-text-large\"\n                >\n                  En el ejemplo anterior ...\n                </p>\n            </Card>\n\n        </Collapse>\n    </>)\n\n\n};","\n\nexport const codeSample=()=>{\n\n    return `\nconst [columns,setColumns]=useState<string[]>(['name', 'lastName', 'phone', 'email', 'company', 'notes']);\n\nconst getConfigStyleHeader = () => {\n        return [\n            {\n                column: 'name',\n                textColor: 'white',\n                backgroundColor: '#DB2C6F',\n                textAlign: 'left'\n            },\n            {\n                column: 'lastName',\n                textColor: 'white',\n                backgroundColor: '#634DBF'\n            },\n            {\n                column: 'phone',\n                textColor: 'white',\n                backgroundColor: '#D13913'\n            },\n            {\n                column: 'email',\n                textColor: 'white',\n                backgroundColor: '#308c8a',\n                textAlign: 'end'\n            },\n            {\n                column: 'company',\n                textColor: 'white',\n                backgroundColor: '#e5504f',\n                textAlign: 'end'\n            },\n            {\n                column: 'notes',\n                textColor: 'white',\n                backgroundColor: '#238C2C',\n                textAlign: 'end'\n            }\n        ]\n    };`\n};\n\nexport const codeProperties=()=>{\n    return `{...otherProperties\\n  \n    columns={columns}\n    configColumnsHeader={getConfigStyleHeader()}\n    reordering={true}\n    onOrderColumns={(columns: string[]) => setColumns(columns)}\n    enableColumnResizing={true}\n    columnWidths={[250, 125, 150, 200]}\n\n`\n};","import React, { useState} from 'react';\nimport {VTable} from \"gsi-ui\";\n\nexport const faker = require('faker');\n\nexport interface IProps {\n    striped?: boolean\n    countData?: number\n}\n\nexport const SortableTableBlueprintSample = (props: IProps) => {\n\n\n    const [columns,setColumns]=useState<string[]>(['name', 'lastName', 'phone', 'email', 'company', 'notes']);\n    const getData = () => {\n\n        const count = props.countData ? props.countData : 8;\n        const data: any[] = [];\n        for (let i = 0; i < count; i++) {\n\n            const firstName = faker.name.firstName();\n            const lastName = faker.name.lastName();\n\n            data.push({\n                name: firstName,\n                lastName: lastName,\n                phone: faker.phone.phoneNumber(),\n                company: faker.company.companyName(),\n                email: faker.internet.email(firstName, lastName, 'generalsoftwareinc.com'),\n                notes: faker.lorem.sentence(),\n\n            })\n        }\n        return data;\n    };\n\n\n    const getColumnsName = () => {\n        return {\n            name: 'Name',\n            lastName: 'Last Name',\n            phone: 'Phone',\n            email: 'Email',\n            company: 'Company',\n            notes: 'Notes',\n        }\n    };\n\n   const onSort = (index: any) => {\n        console.log(index);\n    };\n\n    return (<>\n        <VTable\n            columns={columns}\n            data={getData()}\n            columns_name={getColumnsName()}\n            striped\n            sortable={{\n                columns: 'ALL',\n                onSort: onSort,\n                setupsOrden: [\n                    {\n                        order: 'ASC',\n                        columnName: 'name',\n                        columnIndex: 0\n                    }\n                ]\n            }}\n        />\n    </>)\n};","import {ContainerEditor, H3Pointer} from \"../../../../style\";\nimport {TagCode} from \"../../../../Edito\";\nimport React, {useState} from \"react\";\nimport {Card, Collapse, Divider} from \"@blueprintjs/core\";\nimport {VTabsPanel} from \"gsi-ui\";\nimport {SortableTableBlueprintSample} from \"./SortableHeaderTable\";\nimport {codeProperties, codeSample} from \"./codeSortableHeaderTableSample\";\n\n\n\nexport const SetupSortableHeaderTableDocs =()=>{\n\n    const [headerColorCollapse, setHeaderColorCollapse] = useState<boolean>(true);\n\n    const toggleDefaultCollapse = (key: 'headerColorCollapse') => {\n        switch (key) {\n\n            case 'headerColorCollapse': {\n                setHeaderColorCollapse(!headerColorCollapse);\n                break;\n            }\n        }\n    };\n\n    const code = () => {\n        return (\n            <ContainerEditor style={{ height: '60vh', overflowY: 'auto' }}>\n\n                <pre style={{margin:'0px'}}>\n                    {codeSample()}\n                </pre>\n\n                <TagCode\n                    showPropertiesInPreTag\n                    name={'VTable'}\n                    property={codeProperties()}\n                    inline\n                />\n            </ContainerEditor>\n        );\n    };\n\n    return (<>\n\n        <H3Pointer\n            onClick={() => toggleDefaultCollapse('headerColorCollapse')}\n            className=\"bp3-heading\"\n        >\n            Sortable Header Setting\n        </H3Pointer>\n        <Divider />\n        <Collapse transitionDuration={1000} isOpen={headerColorCollapse}>\n\n            <VTabsPanel\n                size=\"small\"\n                backgroundColor=\"white\"\n                padding=\"0px\"\n                tabList={[\n                    {\n                        label: 'Sample',\n                        key: 'sample',\n                        content: (\n                            <div style={{ padding: '10px ' }}>\n                                <SortableTableBlueprintSample />\n                            </div>\n                        )\n                    },\n                    {\n                        label: 'Code',\n                        key: 'code',\n                        content: <>{code()}</>\n                    }\n                ]}\n                activeBorderColor=\"#175dbf\"\n                active=\"sample\"\n                handleChange={() => {}}\n            />\n            <Card style={{ marginTop: '5px' }}>\n                <p\n                    className=\"bp3-text-muted bp3-text-large\"\n                >\n                    En el ejemplo anterior ...\n                </p>\n            </Card>\n\n        </Collapse>\n    </>)\n\n\n};","import React from \"react\";\n\n\nexport const codeSample=()=>{\n\n    return `\n   const onSort = (index: any) => {\n        console.log(index);\n    };\n  `\n};\n\nexport const codeProperties=()=>{\n    return `{...otherProperties\\n  \n sortable={{\n          columns: 'ALL',\n          onSort: onSort,\n          setupsOrden: [\n              {\n                  order: 'ASC',\n                  columnName: 'name',\n                  columnIndex: 0\n              }\n          ]\n      }}\n`\n};","import React, {  useState } from 'react';\nimport {  Divider, Collapse } from '@blueprintjs/core';\nimport {\n  ContainerEditor,\n  H4Pointer,\n} from '../../../style';\nimport { TagCode } from '../../../Edito';\nimport { SetupColorHeaderTableDocs } from './colorHeader/setupColorHeaderTableDocs';\nimport {SetupSortableHeaderTableDocs} from \"./sortable/SortableHeaderTableDocs\";\n\nexport const HeaderStupTableDocs = () => {\n  const [defaultCollapse, setDefaultCollapse] = useState<boolean>(true);\n  const [headerColorCollapse, setHeaderColorCollapse] = useState<boolean>(\n    false\n  );\n  const code = () => {\n    return (\n      <ContainerEditor style={{ height: '60vh', overflowY: 'auto' }}>\n        <TagCode\n          showPropertiesInPreTag\n          name={'VTable'}\n          property={` columns={['name', 'lastName', 'phone', 'email', 'company', 'notes']} \\n data={getData()}\\n columns_name={getColumnsName()}`}\n          inline\n        />\n      </ContainerEditor>\n    );\n  };\n\n  const toggleDefaultCollapse = (\n    key: 'header_setting' | 'headerColorCollapse'\n  ) => {\n    switch (key) {\n      case 'header_setting': {\n        setDefaultCollapse(!defaultCollapse);\n        break;\n      }\n      case 'headerColorCollapse': {\n        setHeaderColorCollapse(!headerColorCollapse);\n        break;\n      }\n    }\n  };\n\n  return (\n    <>\n      <H4Pointer\n        onClick={() => toggleDefaultCollapse('header_setting')}\n        className=\"bp3-heading\"\n      >\n        Header Setting\n      </H4Pointer>\n      <Divider />\n      <Collapse transitionDuration={1000} isOpen={defaultCollapse}>\n        <p\n          className=\"bp3-text-muted bp3-text-large\"\n          style={{ marginTop: '15px' }}\n        >\n          La tabla se le puede personalizar el encabezado, ya sea el background\n          color, color y alineación del texto reordenamiento de columnas ...\n        </p>\n        <SetupColorHeaderTableDocs />\n         <br />\n        <SetupSortableHeaderTableDocs />\n      </Collapse>\n    </>\n  );\n};\n","import React from 'react';\nimport {Container} from \"./style\";\nimport {DefaultTableDocs} from \"./tablesSamples/blueprintjs/defaultTable/DefaultTableDocs\";\nimport {VCardPanel} from \"gsi-ui\";\nimport {TypeSelectionTableTableDocs} from \"./tablesSamples/blueprintjs/typeSelection/TypeSelectionTableDocs\";\nimport {HeaderStupTableDocs} from \"./tablesSamples/blueprintjs/setupHeader/SetupHeaderTableDocs\";\n\n\n\n\nconst VTableDocs=()=>{\n\n\n    return <Container>\n       <VCardPanel\n           headerText={'Table'}\n           headerBackgroundColor={'#175dbf'}\n           headerColor={'whitesmoke'}\n       >\n\n           <p  className=\"bp3-text-muted bp3-text-large\" style={{marginTop:'15px'}}> La tabla a continuación es una extension de la tabla del framewor ui <a>blueprintjs</a> en el ejemplo de\n               les mostramos las cofiguraciones que se pueden realizar con esta extesión.</p>\n\n           <DefaultTableDocs/>\n           <br/>\n           <TypeSelectionTableTableDocs/>\n           <br/>\n           <HeaderStupTableDocs />\n       </VCardPanel>\n      <br/>\n      <br/>\n      <br/>\n        {/*<VTableWithWidgetDoc/>*/}\n    </Container>\n};\n\nexport default VTableDocs;\n\n","import React from 'react';\nimport { IRiftRoute } from 'rift-router';\nimport { VSelectUnselectItemsDemo } from './components/forms/SelectUnselectItemsDemo';\nimport VAgGridDoc from './components/table/VAgGrid';\nimport VPaginationDocs from './components/table/VPagination';\nimport VColorPickerDoc from './components/forms/VColorPicker';\nimport VInputsDoc from './components/forms/VInputs';\nimport VDragAndDropDoc from './components/forms/VDragAndDrop';\nimport VNotificationToastDocs from './components/notifications/VNotificationToast';\nimport VCarouselDoc from './components/carousel/VCarousel';\nimport VLoadProgressDoc from './components/load-progress/VLoadProgress';\nimport VSuspenseDoc from './components/suspense/VSuspense';\nimport VTabsPanelDoc from './components/tabs/VTabsPanel';\nimport VOrgChartDoc from './components/org-chart/VOrgChart';\nimport Home from './template/Home';\nimport VTableDocs from \"./components/table/VTableDocs\";\n\nexport const routes: IRiftRoute[] = [\n  {\n    component: () => '',\n    onEnter: () => '/',\n    path: '*'\n  },\n  { path: '/', component: <Home /> },\n  { path: '/table/ag-grid', component: <VAgGridDoc /> },\n  { path: '/table/blueprint', component: <VTableDocs /> },\n  { path: '/table/blueprint/suspense', component: <VSuspenseDoc /> },\n  { path: '/table/pagination', component: <VPaginationDocs /> },\n  { path: '/forms', component: () => <VInputsDoc /> },\n  { path: '/forms/color-picker', component: () => <VColorPickerDoc /> },\n  {\n    path: '/forms/select-unselect',\n    component: () => <VSelectUnselectItemsDemo />\n  },\n  { path: '/forms/dnd', component: () => <VDragAndDropDoc /> },\n  { path: '/tabs-panel', component: () => <VTabsPanelDoc /> },\n  { path: '/toast', component: () => <VNotificationToastDocs /> },\n  { path: '/load-progress', component: () => <VLoadProgressDoc /> },\n  { path: '/hierarchy', component: () => <VOrgChartDoc /> },\n  { path: '/carousel', component: () => <VCarouselDoc /> }\n];\n","import React from 'react';\nimport { RiftGate, RiftProvider } from 'rift-router';\nimport { DocsContainer, MainContainer } from './styled';\nimport { MainSidebar } from './MainSidebar';\nimport { routes } from '../router';\nimport './main.css';\n\nexport const Main = () => {\n  return (\n    <DocsContainer>\n      <RiftProvider routes={routes}>\n        <MainSidebar />\n        <MainContainer>\n          <div  id=\"center\" className=\"main center\">\n            <RiftGate />\n          </div>\n        </MainContainer>\n      </RiftProvider>\n    </DocsContainer>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Main } from './docs/template/Main';\n\nclass App extends Component {\n    render() {\n        return <Main />;\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { LicenseManager } from 'ag-grid-enterprise';\nimport App from './App';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\n\nconst licence = process.env.REACT_APP_AGGRID_LICENCE\n  ? process.env.REACT_APP_AGGRID_LICENCE\n  : '';\nLicenseManager.setLicenseKey(licence);\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}