{"version":3,"sources":["docs/components/table/VTableWithWidget.tsx","docs/template/styled.tsx","docs/template/MainSidebar.tsx","docs/components/table/VBlueprint.tsx","docs/components/forms/SelectUnselectItemsDemo.tsx","docs/components/table/VAgGrid.tsx","docs/components/table/VPagination.tsx","docs/components/forms/VColorPicker.tsx","docs/components/forms/VInputs.tsx","docs/components/forms/VDragAndDrop.tsx","docs/components/notifications/VNotificationToast.tsx","docs/components/carousel/VCarousel.tsx","docs/components/load-progress/VLoadProgress.tsx","docs/components/suspense/VSuspense.tsx","docs/components/tabs/VTabsPanel.tsx","docs/components/org-chart/VOrgChart.tsx","docs/template/Home.tsx","docs/router.tsx","docs/template/Main.tsx","App.tsx","index.tsx"],"names":["dropDown","column","widget","type","dropdownCell","options","index","value","label","filterable","colorCell","row","backgroundColor","color","printColor","colorWidget","checkboxWidget","editWidget","datetimeWidget","dateTimeCell","icon","customerwidget","cusmtomerCell","renderCustomer","infoSelection","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","style","textAlign","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_6__","iconSize","intent","width","widgetsCell","VTableWithWidgetDoc","props","_this","Object","_var_www_html_gsi_ux_docs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_var_www_html_gsi_ux_docs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_gsi_ux_docs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","doSomethingAwesomeWithTheValue","console","log","handleFilter","value1","value2","toggleFilterColumn","setState","filterColumn","state","renderTooltip","columnName","concat","handleChangeType","e","target","typeSelection","onSave","data","handleChangeColor","changeColor","onSort","changeData","colorFiltered","getData","changeColumn","columns","addColumn","handleDeleteSelection","clearSelection","name","dropdown","other","fecha","checkbox","sinEditar","customer","filter","x","undefined","_this2","Fragment","gsi_ui__WEBPACK_IMPORTED_MODULE_8__","striped","selectionStyle","borderColor","borderRadius","allowTableTotals","totalsConf","count","totals","average","columnWidths","onSelectionChange","actionsSelection","onSelectionCleaned","onDoubleClick","rowIndex","columnIndex","filterByColumn","filterType","edit","editColumn","resultDataEdited","invalidDataMessage","invalidColumns","showToastNotification","message","join","timeout","editToolbar","textSave","textCancel","iconCancel","iconEdit","iconSave","cellSelectionType","onOrderColumns","columns_name","reordering","sortable","setupsOrden","order","textAlignColumn","configColumnsHeader","textColor","typeHeightRow","enableColumnResizing","toolbar","height","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_7__","minimal","text","onClick","footer","tooltips","onChange","positionTooltips","Component","DocsContainer","styled","div","_templateObject","SidebarContainer","_templateObject2","MainContainer","_templateObject3","CompanyName","_templateObject4","HomeContainer","_templateObject5","MainSidebar","_useState","useState","table","forms","_useState2","slicedToArray","react_default","className","id","htmlFor","lib","to","objectSpread","collapse","isOpen","lastname","age","age1","age2","age3","age4","age5","VBlueprintDoc","gsi_ui_lib","item","contextual","columnsContextual","default_actions","actions","action","enableRowHeader","enableRowResizing","numFrozenRows","numFrozenColumns","VTableWithWidget","itemsUnassigned","active","itemsAssigned","VSelectUnselectItemsDemo","listsHeights","handleCancel","handleSave","element","store","React","datesColumnDefs","size","i","date","moment","Date","add","push","colId","format","headerName","field","cellEditor","cellEditorParams","values","cellRenderer","params","suppressMenu","pinned","lockPosition","editable","totalsColumnDefs","cellStyle","dates","datesData","forEach","workShift","company","supervisor","phonebook","terminal","getDataTotal","labels","_loop","Math","floor","random","pos","length","some","getState","columnDefs","defaultColDef","tooltipComponent","rowData","VAgGridDoc","apiGrid","setApiGrid","_useState3","_useState4","columnApi","setColumnDefGrid","_useState5","_useState6","apiGridTotal","setApiGridTotal","_useState7","_useState8","columnApiTotal","setColumnDefGridTotal","_useState9","_useState10","enableContextualMenu","setEnableContextualMenu","_useState11","getStateTotals","_useState12","stateGridTotal","_useState13","_useState14","hideColumns","setHideColumns","_useState15","_useState16","colorConditional","setColorConditional","_useState17","_useState18","valueConditional","setValueConditional","_useState19","_useState20","clearData","setClearData","_useState21","_useState22","showLoading","setShowLoading","topOptions","alignedGrids","bottomOptions","_useState23","_useState24","oldColumns","setOldColumns","mapperDynamicOptionMenuToContextualMenu","map","cssClasses","node","rangeSelection","api","getRangeSelections","Array","isArray","result","rangesSelection","rangeParsed","range","_loop2","coldId","getColId","y","findIndex","s","start","end","parseRangeSelection","getAllDisplayedColumns","getContextMenuItems","columnFixed","includes","tooltip","subMenu","raiseDoSearchWhenUserStoppedTypingColor","debounce","changeConditionalColor","hex","columnDate","getColumnState","columnDef","getColumnDef","getProperLetterColor","setColumnDefs","toConsumableArray","refreshCells","raiseDoSearchWhenUserStoppedTypingValue","isNaN","changeConditionalValue","parseInt","display","inline","marginLeft","Color","typePickerColor","onGridReady","event","ensureColumnVisible","gridOptions","suppressContextMenu","animateRows","noRowsOverlayComponent","loadingOverlayComponent","frameworkComponents","customLoadingOverlay","VSpinner","customNoRowsOverlay","EmptyData","setColumnsVisible","setRowData","hideOverlay","showLoadingOverlay","ensureIndexVisible","ensureNodeVisible","enableRangeSelection","onRowValueChanged","onCellValueChanged","oldValue","newValue","getColDef","onColumnMoved","toIndex","getDisplayedRowCount","onDragStarted","oldOrder","onDragStopped","newOrder","isPinned","VPaginationDoc","classCallCheck","possibleConstructorReturn","getPrototypeOf","getCountry","country","onPageChanged","_data$paginationData","paginationData","currentPage","totalPages","offset","pageLimit","currentCountries","slice","itemsByPage","renderInfoDetails","infoPage","margin","allCountries","totalCountries","key","totalRecords","pageNeighbours","pages","customerStyle","pageSelectedBackgroundColor","pageSelectedColor","iconColor","pageHoverColor","pageHoverBackgroundColor","VColorPickerDoc","rgb","handleChangeTypeToChromePicker","handleChangeTypeToSketchPicker","disable","position","sex","rep","VInputsDoc","observer","selectValue","setSelectValue","form","FormState","username","FieldState","search","description","tags","have_job","places","toDate","multiple","movies","setSelectedValue","rightButton","buttons","$","fill","required","layer","labelWidth","inputWidth","labelOrientation","inputOrientation","placeholder","fieldState","tipLabel","rightElement","noLabel","validators","toString","indexOf","Validators","lt","exact","leftIcon","defaultText","limit","tagValidation","regex","errorMessage","checkBoxAtLeft","alignIndicator","dateType","iconName","iconOnly","list","VDragAndDropDoc","open","containerOrientation","onDragAndDrop","output","RowButtons","VNotificationToast_templateObject","VNotificationToastDocs","buttonsHeaderRow","propsList","href","onDismiss","padding","headerText","headerCustomComponent","marginRight","elementsCarousel","VCarouselDoc","elements","buttonsJustify","VLoadProgressDoc","openProgress","setTimeout","onClose","title","Table","lazy","Promise","all","resolve","then","__webpack_require__","bind","_ref","VSuspenseDoc","VTabsPanelDoc","handelChangeTab","tab","tabList","content","dataBadge","FirstTabList","activeBorderColor","beforeChangeTabValidation","handleChange","tabsAlertProps","confirmButtonText","cancelButtonText","canEscapeKeyCancel","bodyText","dataSource","children","VOrgChartDoc","onReorder","draggable","Home","html","divider","routes","component","onEnter","path","template_Home","VAgGrid","VBlueprint","VSuspense","VPagination","VInputs","VColorPicker","SelectUnselectItemsDemo_VSelectUnselectItemsDemo","VDragAndDrop","VTabsPanel","VNotificationToast","VLoadProgress","VOrgChart","VCarousel","Main","MainSidebar_MainSidebar","App","Main_Main","LicenseManager","setLicenseKey","process","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.30ff529a.chunk.js","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport { Button, Icon } from '@blueprintjs/core';\nimport {\n  CellSelectionType,\n  InfoSelection,\n  IVWidgetTableProps,\n  showToastNotification,\n  VTable\n} from 'gsi-ui';\n\nexport const dropDown: IVWidgetTableProps = {\n  column: 'dropdown',\n  widget: {\n    type: 'DROPDOWN',\n    dropdownCell: {\n      options: [\n        { index: 1, value: 4, label: 'otro' },\n        { index: 2, value: 3, label: 'Lastname7' },\n        { index: 3, value: 2, label: 'lucia alvares' },\n        { index: 4, value: 1, label: 'jajajojo jujuju' }\n      ],\n      filterable: true\n    },\n    colorCell: {\n      column: 'dropdown',\n      row: 1,\n      backgroundColor: 'blue',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\n\nexport const colorWidget: IVWidgetTableProps = {\n  row: 1,\n  widget: {\n    type: 'COLOR',\n    colorCell: {\n      backgroundColor: 'orange',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\n\nexport const checkboxWidget: IVWidgetTableProps = {\n  column: 'checkbox',\n  widget: {\n    type: 'CHECKBOX',\n    colorCell: {\n      column: 'checkbox',\n      row: 1,\n      backgroundColor: 'orange',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\n\nexport const editWidget: IVWidgetTableProps = {\n  column: 'name',\n  row: 1,\n  widget: {\n    type: 'EDIT',\n    colorCell: {\n      column: 'name',\n      row: 1,\n      backgroundColor: 'orange',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\n\nexport const datetimeWidget: IVWidgetTableProps = {\n  column: 'fecha',\n  widget: {\n    type: 'DATETIME',\n    dateTimeCell: {\n      icon: 'calendar'\n    },\n    colorCell: {\n      column: 'fecha',\n      backgroundColor: 'orange',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\n\nexport const customerwidget: IVWidgetTableProps = {\n  column: 'customer',\n  widget: {\n    type: 'CUSTOMERCOMPONENT',\n    cusmtomerCell: {\n      renderCustomer: (\n        value: string,\n        infoSelection?: InfoSelection\n      ): ReactNode => {\n        return (\n          <div style={{ textAlign: 'center' }}>\n            <Icon icon={'phone'} iconSize={15} intent={'success'} /> {value}{' '}\n            adjgndkgfjnkdgndksjgnfksdjgnfksdjngfksjdngfkjsdngfksjd\n          </div>\n        );\n      },\n      width: '100%'\n    },\n    colorCell: {\n      row: 1,\n      backgroundColor: 'orange',\n      color: 'white',\n      printColor: () => {\n        return true;\n      }\n    }\n  }\n};\nexport const renderCustomer = (value: string): ReactNode => {\n  return (\n    <div>\n      <Icon icon={'phone'} iconSize={15} intent={'success'} /> {value}\n    </div>\n  );\n};\nexport const widgetsCell: IVWidgetTableProps[] = [\n  dropDown,\n  colorWidget,\n  datetimeWidget,\n  checkboxWidget,\n  customerwidget\n];\n\ninterface IProps {}\n\ninterface IState {\n  changeColor: boolean;\n  data: IData[];\n  columns: string[];\n  clearSelection: boolean | undefined;\n  typeSelection: CellSelectionType;\n  filterColumn: boolean;\n}\n\ninterface IData {\n  name: string;\n  dropdown: string | number;\n  other: string;\n  fecha: string;\n  checkbox: boolean;\n  color: any;\n  sinEditar: string;\n  customer: string;\n}\n\nclass VTableWithWidgetDoc extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      changeColor: false,\n      data: this.getData(),\n      columns: [\n        'name',\n        'dropdown',\n        'other',\n        'fecha',\n        'checkbox',\n        'customer',\n        'color',\n        'sinEditar'\n      ],\n      clearSelection: undefined,\n      typeSelection: 'CELL',\n      filterColumn: false\n    };\n  }\n\n  doSomethingAwesomeWithTheValue = (value: any) => {\n    console.log('change selection', value);\n  };\n\n  handleFilter = (value1: any, value2: string) => {\n    console.log(value1, value2);\n  };\n\n  toggleFilterColumn = () => {\n    this.setState({ filterColumn: !this.state.filterColumn });\n  };\n\n  renderTooltip = (value: any, infoSelection?: InfoSelection) => {\n    if (infoSelection && infoSelection!.columnName === 'name') {\n      return `Creemos que su nombre es  ${value}`;\n    }\n\n    if (infoSelection && infoSelection!.columnName === 'customer') {\n      return (\n        <div style={{ width: 'auto' }}>\n          <ul>\n            <li>\n              Dias de vacaiones {value}eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee{' '}\n            </li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n          </ul>\n        </div>\n      );\n    }\n\n    if (infoSelection && infoSelection!.columnName === 'fecha') {\n      return (\n        <div>\n          <ul>\n            <li>Dias de vacaiones {value} </li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n            <li>Dias de vacaiones {value}</li>\n          </ul>\n        </div>\n      );\n    }\n\n    return undefined;\n  };\n\n  render() {\n    // validator example\n    return (\n      <React.Fragment>\n        <div>\n          <VTable\n            striped\n            selectionStyle={{\n              backgroundColor: 'rgba(34, 220, 72, 0.16);',\n              borderColor: 'green',\n              borderRadius: '15'\n            }}\n            allowTableTotals\n            totalsConf={{\n              count: ['name', 'dropdown'],\n              totals: ['color'],\n              average: ['other']\n            }}\n            columnWidths={[200, 125, 150, 200]}\n            onSelectionChange={this.doSomethingAwesomeWithTheValue}\n            actionsSelection={{\n              onSelectionChange: this.doSomethingAwesomeWithTheValue,\n              onSelectionCleaned: (value: any) => {\n                console.log('onSelectionCleaned', value);\n              },\n              clearSelection: this.state.clearSelection,\n              onDoubleClick: (\n                value: any,\n                rowIndex: number,\n                columnIndex: number,\n                columnName: string\n              ) => {\n                console.log(\n                  'doble click',\n                  value,\n                  rowIndex,\n                  columnIndex,\n                  columnName\n                );\n              }\n            }}\n            filterByColumn={{\n              filterable: this.state.filterColumn,\n              handleFilter: this.handleFilter,\n              filterType: 'INPUT'\n            }}\n            edit={{\n              editColumn: {\n                columns: ['name', 'other']\n              },\n              resultDataEdited: 'CELL',\n              onSave: this.onSave,\n              invalidDataMessage: (invalidColumns: string[]) => {\n                showToastNotification({\n                  type: 'danger',\n                  message: `No se puede guardar porq las siguiente columnas tienen datos invalidos: ${invalidColumns.join(\n                    ' , '\n                  )}`,\n                  timeout: 8000\n                });\n              },\n              editToolbar: {\n                textSave: 'Salvar',\n                textCancel: 'Cancelar',\n                iconCancel: 'cross',\n                iconEdit: 'take-action',\n                iconSave: 'share'\n              }\n            }}\n            cellSelectionType={this.state.typeSelection}\n            widgetsCell={widgetsCell}\n            columns={this.state.columns}\n            onOrderColumns={(columns: string[]) => this.setState({ columns })}\n            columns_name={{ name: 'Namesito' }}\n            reordering={true}\n            sortable={{\n              columns: ['name', 'color', 'sinEditar'],\n              onSort: this.onSort,\n              setupsOrden: [\n                {\n                  order: 'ASC',\n                  columnName: 'color',\n                  columnIndex: 0\n                }\n              ]\n            }}\n            data={this.state.data}\n            textAlignColumn={[\n              {\n                columns: 'ALL',\n                textAlign: 'end'\n              },\n              {\n                columns: 'name',\n                textAlign: 'left'\n              }\n            ]}\n            configColumnsHeader={[\n              {\n                column: 'name',\n                textColor: 'white',\n                backgroundColor: '#DB2C6F',\n                textAlign: 'left'\n              },\n              {\n                column: 'fecha',\n                textColor: 'white',\n                backgroundColor: '#634DBF'\n              },\n              {\n                column: 'dropdown',\n                textColor: 'white',\n                backgroundColor: '#D13913'\n              },\n              {\n                column: 'color',\n                textColor: 'white',\n                backgroundColor: '#238C2C',\n                textAlign: 'end'\n              }\n            ]}\n            typeHeightRow={'SHORT'}\n            enableColumnResizing={true}\n            toolbar={\n              <div\n                style={{ width: '100%', height: 50, backgroundColor: 'teal' }}\n              >\n                <Button\n                  minimal\n                  text={'Filter by column'}\n                  icon={'filter'}\n                  onClick={this.toggleFilterColumn}\n                />\n              </div>\n            }\n            footer={\n              <div\n                style={{ width: '100%', height: 50, backgroundColor: 'blue' }}\n              >\n                Toolbar\n              </div>\n            }\n            tooltips={this.renderTooltip}\n          />\n        </div>\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n\n        <button onClick={this.handleChangeColor}>cambiar color</button>\n        <button onClick={this.changeColumn}>cambiar columnas</button>\n        <button onClick={this.addColumn}>add columnas</button>\n        <button\n          onClick={() => {\n            this.changeData('blue');\n          }}\n        >\n          cambiar datos\n        </button>\n        <br />\n        <span> tipo de seleccion </span>\n        <select onChange={this.handleChangeType}>\n          <option value={'CELL'}>CELL</option>\n          <option value={'FREE'}>FREE</option>\n          <option value={'ENTIRE_ROW'}>ENTIRE_ROW</option>\n          <option value={'DISABLED'}>DISABLED</option>\n        </select>\n        <button\n          onClick={() => {\n            this.handleDeleteSelection(true);\n          }}\n        >\n          {' '}\n          Borrar seleccion\n        </button>\n        <button\n          onClick={() => {\n            this.handleDeleteSelection(false);\n          }}\n        >\n          {' '}\n          habilitar seleccion\n        </button>\n        <br />\n        <br />\n        <VTable\n          columns={['name', 'customer', 'other']}\n          data={[\n            {\n              name: 'name',\n              customer: 'customer',\n              other: 'other'\n            }\n          ]}\n          tooltips={this.renderTooltip}\n          positionTooltips={'left'}\n        />\n      </React.Fragment>\n    );\n  }\n\n  handleChangeType = (e: any) => {\n    console.log(e.target.value);\n    this.setState({\n      typeSelection: e.target.value\n    });\n  };\n\n  onSave = (data: any) => {\n    console.log('datos salvados..', data);\n  };\n  handleChangeColor = () => {\n    if (\n      widgetsCell[1] &&\n      widgetsCell[1].widget &&\n      widgetsCell[1].widget.colorCell\n    ) {\n      widgetsCell[1].widget!.colorCell!.backgroundColor = 'green';\n      this.setState({\n        changeColor: !this.state.changeColor\n      });\n    }\n  };\n\n  onSort = (index: any) => {\n    console.log(index);\n  };\n\n  changeData = (colorFiltered?: string) => {\n    this.setState({\n      data: this.getData(colorFiltered)\n    });\n  };\n\n  changeColumn = () => {\n    this.setState({\n      columns: ['name', 'dropdown', 'other', 'fecha', 'checkbox']\n    });\n  };\n  addColumn = () => {\n    this.setState({\n      columns: ['name', 'dropdown', 'other', 'fecha', 'checkbox', 'sinEditar']\n    });\n  };\n\n  handleDeleteSelection = (clearSelection: boolean) => {\n    this.setState({\n      clearSelection\n    });\n  };\n\n  getData = (colorFiltered?: any): IData[] => {\n    const data = [\n      {\n        name: 'Arturo',\n        dropdown: 1,\n        other: '7',\n        fecha: '10/11/2019',\n        checkbox: false,\n        color: 5,\n        sinEditar: 'another better text',\n        customer: 'passenger'\n      },\n      {\n        name: 'Carlos',\n        dropdown: 2,\n        other: '3',\n        fecha: '12/05/2018',\n        checkbox: false,\n        color: 4,\n        sinEditar: ' some text',\n        customer: 'customer'\n      },\n      {\n        name: 'Manuel',\n        dropdown: 2,\n        other: '5',\n        fecha: '12/05/2018',\n        checkbox: true,\n        color: 3,\n        sinEditar: ' some text',\n        customer: 'customer'\n      },\n      {\n        name: 'Pepe',\n        dropdown: 2,\n        other: '9',\n        fecha: '12/05/2018',\n        checkbox: false,\n        color: 8,\n        sinEditar: ' some text',\n        customer: 'customer'\n      }\n    ];\n\n    return colorFiltered ? data.filter(x => x.color === colorFiltered) : data;\n  };\n}\n\nexport default VTableWithWidgetDoc;\n","import styled from 'styled-components';\n\nexport const DocsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SidebarContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const CompanyName = styled.div`\n  text-align: center;\n  color: white;\n  letter-spacing: 2px;\n  font-size: 10px;\n`;\n\nexport const HomeContainer = styled.div`\n  padding: 10px;\n`;\n","import React, { useState } from 'react';\nimport { Collapse } from '@blueprintjs/core';\nimport { RiftLink } from 'rift-router';\nimport { CompanyName, SidebarContainer } from './styled';\n\nexport const MainSidebar = () => {\n  const [state, setState] = useState({\n    table: false,\n    forms: false\n  });\n  return (\n    <SidebarContainer>\n      <div className=\"header\" />\n      <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\" />\n      <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n        <div className=\"spinner diagonal part-1\" />\n        <div className=\"spinner horizontal\" />\n        <div className=\"spinner diagonal part-2\" />\n      </label>\n      <div id=\"sidebarMenu\">\n        <ul className=\"sidebarMenuInner\">\n          <li>\n            <RiftLink to=\"/\">Home</RiftLink>\n          </li>\n          <li>\n            <a\n              onClick={() => setState({ ...state, ...{ table: !state.table } })}\n            >\n              Table\n            </a>\n            <Collapse isOpen={state.table}>\n              <ul className=\"sidebarMenuInner\">\n                <li>\n                  <RiftLink to=\"/table/ag-grid\">Ag-Grid</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/blueprint\">Blueprint</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/blueprint/suspense\">\n                    Blueprint Suspense\n                  </RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/table/pagination\">Pagination</RiftLink>\n                </li>\n              </ul>\n            </Collapse>\n          </li>\n          <li>\n            <a\n              onClick={() => setState({ ...state, ...{ forms: !state.forms } })}\n            >\n              Forms\n            </a>\n            <Collapse isOpen={state.forms}>\n              <ul className=\"sidebarMenuInner\">\n                <li>\n                  <RiftLink to=\"/forms\">Example</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/color-picker\">Color Picker</RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/select-unselect\">\n                    Select Unselect\n                  </RiftLink>\n                </li>\n                <li>\n                  <RiftLink to=\"/forms/dnd\">Drag&Drop</RiftLink>\n                </li>\n              </ul>\n            </Collapse>\n          </li>\n          <li>\n            <RiftLink to=\"/tabs-panel\">Tabs Panel</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/toast\">Toast</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/load-progress\">Load Progress</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/carousel\">Carousel</RiftLink>\n          </li>\n          <li>\n            <RiftLink to=\"/hierarchy\">Hierarchy</RiftLink>\n          </li>\n        </ul>\n        <CompanyName>General Software Inc.</CompanyName>\n      </div>\n    </SidebarContainer>\n  );\n};\n","import React from 'react';\nimport { ISortResult, showToastNotification, VTable } from 'gsi-ui';\nimport VTableWithWidgetDoc from './VTableWithWidget';\n\nconst data = [\n  {\n    name: 'Carlos',\n    lastname: 'Chao',\n    age: 28,\n    age1: 28,\n    age2: 28,\n    age3: 28,\n    age4: 28,\n    age5: 28\n  },\n  {\n    name: 'Carlos',\n    lastname: 'Chao',\n    age: 28,\n    age1: 28,\n    age2: 28,\n    age3: 28,\n    age4: 28,\n    age5: 28\n  },\n  {\n    name: 'Carlos',\n    lastname: 'Chao',\n    age: 28,\n    age1: 28,\n    age2: 28,\n    age3: 28,\n    age4: 28,\n    age5: 28\n  }\n];\n\n// validator example\nconst nameValidation = (value: string) => {\n  return value.length > 5;\n};\n\nconst VBlueprintDoc = () => {\n  const onSave = (data: any) => {\n    console.log(data);\n  };\n\n  const onSort = (item: ISortResult) => {\n    console.log(item.order);\n    console.log(item.columnIndex);\n    console.log(item.columnName);\n  };\n\n  return (\n    <div>\n      <VTable\n        striped\n        columns={[\n          'name',\n          'lastname',\n          'age',\n          'age1',\n          'age2',\n          'age3',\n          'age4',\n          'age5'\n        ]}\n        cellSelectionType=\"ENTIRE_ROW\"\n        columns_name={{ name: 'mi nombre' }}\n        reordering\n        sortable={{ onSort, columns: ['name'] }}\n        contextual={{\n          columnsContextual: [\n            {\n              columns: ['name'],\n              default_actions: ['copy', 'paste'],\n              actions: [\n                {\n                  icon: 'export',\n                  action: (item: any) => console.log(item),\n                  text: 'Action Input'\n                }\n              ]\n            }\n          ]\n        }}\n        edit={{\n          onSave,\n          editColumn: {\n            columns: ['lastname']\n          },\n          invalidDataMessage: (invalidColumns: string[]) => {\n            showToastNotification({\n              type: 'danger',\n              message: `No se puede guardar porq las siguiente columnas tienen datos invalidos: ${invalidColumns.join(\n                ' , '\n              )}`,\n              timeout: 8000\n            });\n          },\n\n          editToolbar: {\n            textSave: 'Salvar',\n            textCancel: 'Cancelar',\n            iconCancel: 'cross',\n            iconEdit: 'take-action',\n            iconSave: 'share'\n          }\n        }}\n        data={data}\n        enableColumnResizing\n        enableRowHeader\n        enableRowResizing\n        columnWidths={[200, 200, 250, 250, 250]}\n        numFrozenRows={2}\n        numFrozenColumns={1}\n        actionsSelection={{\n          onDoubleClick: (\n            value: any,\n            rowIndex: number,\n            columnIndex: number,\n            columnName: string\n          ) => {\n            console.log('doble click');\n          }\n        }}\n      />\n      <VTableWithWidgetDoc />\n    </div>\n  );\n};\n\nexport default VBlueprintDoc;\n","import React from 'react';\nimport { IItemsList, SelectUnselectItems } from 'gsi-ui';\n\nconst itemsUnassigned: IItemsList[] = [\n  { active: false, text: 'Item1', value: 'item1' },\n  { active: false, text: 'Item2', value: 'item2' },\n  { active: false, text: 'Item3', value: 'item3' },\n  { active: false, text: 'Item4', value: 'item4' }\n];\nconst itemsAssigned: IItemsList[] = [\n  { active: false, text: 'Item5', value: 'item5' },\n  { active: false, text: 'Item6', value: 'item6' },\n  { active: false, text: 'Item7', value: 'item7' },\n  { active: false, text: 'Item8', value: 'item8' }\n];\n\nexport const VSelectUnselectItemsDemo = () => {\n  const handleSave = (element: any) => {\n    console.log(element);\n  };\n  return (\n    <SelectUnselectItems\n      listsHeights=\"142px\"\n      handleCancel={() => console.log('cancelled')}\n      handleSave={handleSave}\n      itemsUnassigned={itemsUnassigned}\n      itemsAssigned={itemsAssigned}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  EmptyData,\n  getProperLetterColor,\n  showToastNotification,\n  VAgGrid,\n  VColorPicker,\n  VColorResult,\n  VInputField,\n  VSelectField,\n  VSpinner\n} from 'gsi-ui';\nimport {\n  CellValueChangedEvent,\n  ColDef,\n  Column,\n  ColumnApi,\n  ColumnMovedEvent,\n  DragStartedEvent,\n  DragStoppedEvent,\n  GetContextMenuItemsParams,\n  GridApi,\n  GridReadyEvent,\n  ICellRendererParams,\n  RangeSelection,\n  RowValueChangedEvent\n} from 'ag-grid-community';\n\nimport moment, { Moment } from 'moment';\nimport './vgrid.css';\n\nimport { ColumnState } from 'ag-grid-community/dist/lib/columnController/columnController';\nimport { debounce } from 'formstate/lib/internal/utils';\n\nclass MakeCellRender extends React.Component<ICellRendererParams> {\n  render() {\n    // put in render logic\n    return (\n      <>\n        <span onClick={() => this.onClick()}>{`${this.props.value} LOL`}</span>\n      </>\n    );\n  }\n\n  onClick = () => {\n    console.log('click');\n  };\n}\n\nclass CustomTooltip extends React.Component<any> {\n  constructor(props: any) {\n    super(props);\n    console.log('constructor', props);\n  }\n\n  componentDidMount() {\n    // this.props.reactContainer.className = 'custom-tooltip';\n  }\n\n  render() {\n    const data = this.props.api.getRowNode(this.props.rowIndex).data;\n    return (\n      <div\n        className=\"custom-tooltip\"\n        style={{ backgroundColor: this.props.color || 'white' }}\n      >\n        <p>\n          <span>{data.athlete}</span>\n        </p>\n        <p>\n          <span>Country: </span> {data.country}\n        </p>\n        <p>\n          <span>Total: </span> {data.total}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst store = [\n  {\n    label: 'Toyota',\n    value: 'Toyota'\n  },\n  {\n    label: 'Ford',\n    value: 'Ford'\n  },\n  {\n    label: 'Porsche',\n    value: 'Porsche'\n  }\n];\n\nconst datesColumnDefs = (size: number) => {\n  const datesColumnDefs: any[] = [];\n  for (let i = 0; i < size; i++) {\n    const date: Moment = moment(new Date());\n    date.add(i + 1, 'days');\n\n    datesColumnDefs.push({\n      colId: `${date.format('DD-MM-YYYY')}/date`,\n      headerName: date.format('DD-MM-YYYY'),\n      field: `${date.format('DD-MM-YYYY')}/date`,\n      sortable: false,\n      // cellRendererFramework: SelectCellRender,\n      cellEditor: 'agRichSelectCellEditor',\n\n      cellEditorParams: {\n        values: [{ label: 'On', value: '1' }, { label: 'Off', value: '2' }],\n        cellRenderer(params: any) {\n          return 'Value is <b>' + params.value.label + '</b>';\n        }\n      },\n      cellRenderer(params: any) {\n        return ' <b>' + params.value.label + '</b>';\n      },\n\n      suppressMenu: true,\n      pinned: false,\n      lockPosition: true,\n      editable: true\n    });\n  }\n  return datesColumnDefs;\n};\n\nconst totalsColumnDefs = (size: number) => {\n  const datesColumnDefs: any[] = [];\n  for (let i = 0; i < size; i++) {\n    const date: Moment = moment(new Date());\n    date.add(i + 1, 'days');\n\n    datesColumnDefs.push({\n      colId: `${date.format('DD-MM-YYYY')}/date`,\n      headerName: date.format('DD-MM-YYYY'),\n      field: `${date.format('DD-MM-YYYY')}/date`,\n      sortable: false,\n      suppressMenu: true,\n      pinned: false,\n      lockPosition: true,\n      cellStyle(params: any) {\n        if (params.value >= 5) {\n          // mark police cells as red\n          return { textAlign: 'end', backgroundColor: 'red' };\n        }\n        return null;\n      }\n    });\n  }\n  return datesColumnDefs;\n};\n\nconst getData = (size: number) => {\n  const data: any[] = [];\n  const dates = datesColumnDefs(60);\n  const datesData: any = {};\n  dates.forEach(x => {\n    datesData[x.colId] = { label: 'On', value: '1' };\n  });\n  for (let i = 0; i < size; i++) {\n    data.push({\n      name: `name_${i + 1}`,\n      workShift: `last name_${i + 1}`,\n      company: `company_${i + 1}`,\n      supervisor: `${i + 1}`,\n      phonebook: `phonebook_${i + 1}`,\n      terminal: `address_${i + 1}`,\n      ...datesData\n    });\n  }\n\n  return data;\n};\n\nconst getDataTotal = (size: number) => {\n  const data: any[] = [];\n  const dates = totalsColumnDefs(60);\n\n  let labels: string[] = [\n    'On',\n    'Off',\n    'Food',\n    'Gasoline',\n    'wood',\n    'PC',\n    'TV',\n    'Count Phone',\n    'Printer',\n    'Human Resources'\n  ];\n\n  for (let i = 0; i < size; i++) {\n    const datesData: any = {};\n    dates.forEach(x => {\n      datesData[x.colId] = Math.floor(Math.random() * 101);\n    });\n    const pos: number = Math.floor(Math.random() * labels.length);\n    if (i % 2 === 0 && !data.some(x => x.name === labels[pos])) {\n      data.push({\n        name: labels[pos],\n        ...datesData\n      });\n      labels = labels.filter(x => x !== labels[pos]);\n    } else {\n      data.push({\n        name: '% of total',\n        ...datesData\n      });\n    }\n  }\n\n  return data;\n};\n\nconst getState = () => {\n  const pinned: boolean = true;\n  const state: any = {\n    columnDefs: [\n      {\n        colId: 'name',\n        headerName: 'name',\n        field: 'name',\n        sortable: true,\n        cellEditor: 'agSelectCellEditor',\n        cellEditorParams: {\n          values: ['English', 'Spanish', 'French', 'Portuguese', '(other)']\n        },\n        suppressMenu: true,\n        pinned,\n        editable: true\n      },\n      {\n        colId: 'company',\n        headerName: 'company',\n        field: 'company',\n        sortable: true,\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'workShift',\n        headerName: 'last name',\n        field: 'workShift',\n        sortable: true,\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'supervisor',\n        headerName: 'Age',\n        field: 'supervisor',\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'phonebook',\n        headerName: 'phone book',\n        field: 'phonebook',\n        suppressMenu: true,\n        pinned\n      },\n      {\n        colId: 'terminal',\n        headerName: 'Address',\n        field: 'terminal',\n        suppressMenu: true,\n        pinned\n      }\n    ],\n    defaultColDef: {\n      // set every column width\n\n      // make every column editable\n      editable: false,\n      filter: 'agTextColumnFilter',\n      tooltipComponent: 'customTooltip'\n    },\n    rowData: getData(200)\n  };\n\n  datesColumnDefs(60).forEach(x => {\n    state.columnDefs!.push(x);\n  });\n\n  return state;\n};\n\nconst getStateTotals = () => {\n  const pinned = true;\n  const state: any = {\n    columnDefs: [\n      {\n        colId: 'name',\n        headerName: 'Dates',\n        field: 'name',\n        sortable: false,\n        cellEditor: 'agSelectCellEditor',\n        cellEditorParams: {\n          values: ['English', 'Spanish', 'French', 'Portuguese', '(other)']\n        },\n        suppressMenu: true,\n        pinned\n      }\n    ],\n    defaultColDef: {\n      // set every column width\n\n      // make every column editable\n      editable: false,\n      filter: 'agTextColumnFilter'\n    },\n    rowData: getDataTotal(13)\n  };\n\n  totalsColumnDefs(60).forEach(x => {\n    state.columnDefs!.push(x);\n  });\n\n  return state;\n};\n\nclass SelectCellRender extends React.Component<ICellRendererParams> {\n  render() {\n    console.log(this.props.value);\n    return (\n      <VSelectField\n        minimal\n        fill\n        options={store}\n        inline\n        value={this.props.value}\n        id=\"store\"\n        // onChange={this.setSelectedValue}\n      />\n    );\n  }\n}\n\nconst VAgGridDoc = () => {\n  const [apiGrid, setApiGrid] = useState<GridApi | undefined>();\n  const [columnApi, setColumnDefGrid] = useState<ColumnApi | undefined>();\n\n  const [apiGridTotal, setApiGridTotal] = useState<GridApi | undefined>();\n\n  const [columnApiTotal, setColumnDefGridTotal] = useState<\n    ColumnApi | undefined\n  >();\n\n  const [enableContextualMenu, setEnableContextualMenu] = useState<boolean>(\n    true\n  );\n\n  const [stateGridTotal, setStateGridTotal] = useState<any>(getStateTotals());\n\n  const [hideColumns, setHideColumns] = useState<boolean>(true);\n\n  const [colorConditional, setColorConditional] = useState<string>('red');\n  const [valueConditional, setValueConditional] = useState<number>(60);\n\n  const [clearData, setClearData] = useState<boolean>(false);\n  const [showLoading, setShowLoading] = useState<boolean>(false);\n\n  const topOptions: any = { alignedGrids: [] };\n  const bottomOptions: any = { alignedGrids: [] };\n\n  topOptions.alignedGrids.push(bottomOptions);\n  bottomOptions.alignedGrids.push(topOptions);\n\n  const [oldColumns, setOldColumns] = useState<string[]>([]);\n\n  const onGridReady = (event: GridReadyEvent): void => {\n    console.log('GridReadyEvent', event);\n\n    event.api.ensureColumnVisible('31-05-2019/dates');\n    setApiGrid(event.api);\n\n    setColumnDefGrid(event.columnApi);\n  };\n\n  const onGridReadyTotal = (event: GridReadyEvent): void => {\n    console.log('GridReadyEvent', event);\n\n    event.api.ensureColumnVisible('31-05-2019/dates');\n    setApiGridTotal(event.api);\n    setColumnDefGridTotal(event.columnApi);\n  };\n\n  const onRowValueChanged = (event: RowValueChangedEvent) => {\n    console.log('RowValueChangedEvent', event);\n  };\n\n  const onCellValueChanged = (event: CellValueChangedEvent) => {\n    const row = getData(200)[event.rowIndex];\n\n    event.oldValue !== event.newValue &&\n      showToastNotification({\n        type: 'warning',\n        message: `se ha cambiado el valor ${row.name} de ${\n          event.oldValue.label\n        } a ${event.newValue.label} en la fecha ${\n          event.column.getColDef().headerName\n        }`\n      });\n  };\n\n  const onColumnMoved = (event: ColumnMovedEvent) => {\n    showToastNotification({\n      type: 'success',\n      message: `se ha movido la columna ${\n        event.column!.getColDef().colId\n      } a la posicion ${event!.toIndex! + 1 - 60} `\n    });\n  };\n\n  const onDragStopped = (event: DragStoppedEvent) => {\n    const newOrder = event!\n      .columnApi!.getAllDisplayedColumns()\n      .filter((x: Column) => x.isPinned())\n      .map(x => x.getColDef().field)\n      .join(' , ');\n    const oldOrder = oldColumns.join(' , ');\n\n    oldOrder !== newOrder &&\n      showToastNotification({\n        type: 'primary',\n        message: `${event.type} El nuevo orden de la columnas es ${newOrder} `,\n        timeout: 3000\n      });\n  };\n\n  const onDragStarted = (event: DragStartedEvent) => {\n    const oldOrder: string[] = event\n      .columnApi!.getColumnState()\n      .filter((x: ColumnState) => x.pinned)\n      .map((x: ColumnState) => x.colId!);\n    setOldColumns(oldOrder);\n  };\n\n  const toggleContextualMenu = () => {\n    setEnableContextualMenu(!enableContextualMenu);\n  };\n\n  const toggleVisibleColumns = () => {\n    columnApi!.setColumnsVisible(['company', 'workShift'], !hideColumns);\n    setHideColumns(!hideColumns);\n  };\n\n  const clearTable = () => {\n    if (!clearData) {\n      apiGrid && apiGrid.setRowData([]);\n      apiGrid && apiGrid.setColumnDefs([]);\n    } else {\n      apiGrid && apiGrid.setRowData(getData(200));\n      apiGrid && apiGrid.setColumnDefs(getState().columnDefs!);\n    }\n\n    setClearData(!clearData);\n  };\n\n  function createFlagImg(flag: any) {\n    return (\n      '<img border=\"0\" width=\"15\" height=\"10\" src=\"https://flags.fmcdn.net/data/flags/mini/' +\n      flag +\n      '.png\"/>'\n    );\n  }\n\n  const parseRangeSelection = (\n    rangesSelection: RangeSelection[],\n    value: any,\n    columns: Column[]\n  ) => {\n    const rangeParsed: {\n      data: any;\n      infoSelection: any;\n    }[] = [];\n\n    rangesSelection.forEach((range: RangeSelection) => {\n      for (let i = 0; i < range.columns!.length; i++) {\n        for (let row = range.start.rowIndex; row <= range.end.rowIndex; row++) {\n          const coldId = range.columns![i].getColId();\n\n          const exitRangeParsed = rangeParsed.some(\n            y =>\n              y.infoSelection.rowIndex === row &&\n              y.infoSelection.columnName === coldId\n          );\n          if (!exitRangeParsed) {\n            rangeParsed.push({\n              data: value,\n              infoSelection: {\n                rowIndex: row,\n                columnName: coldId,\n                columnIndex: columns.findIndex(s => s.getColId() === coldId)\n              }\n            });\n          }\n        }\n      }\n    });\n    return rangeParsed;\n  };\n\n  const mapperDynamicOptionMenuToContextualMenu = (\n    options: { label: string; value: string }[],\n    params: GetContextMenuItemsParams\n  ) => {\n    return options.map((x: { label: string; value: string }) => {\n      return {\n        name: x.label,\n        cssClasses: ['redFont', 'bold'],\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          const rangeSelection: RangeSelection[] = params.api!.getRangeSelections();\n\n          const value = rangeSelection ? rangeSelection : params.value;\n\n          if (Array.isArray(value)) {\n            const result = parseRangeSelection(\n              value,\n              x.value,\n              params.columnApi!.getAllDisplayedColumns()\n            );\n            console.log('actualizar con ', x.label, 'a estas tuplas', result);\n          } else {\n            console.log('params.value', value);\n          }\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Update sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${\n              params.value.label\n            } `\n          });\n        }\n      };\n    });\n  };\n\n  const getContextMenuItems = (params: GetContextMenuItemsParams) => {\n    const columnDefs = getState().columnDefs!;\n    const columnFixed = columnDefs!\n      .filter((x: any) => !x.colId.includes('/date'))\n      .map((y: any) => y.colId);\n    if (\n      params.column &&\n      columnFixed.some((x: string) => x === params.column.getColId())\n    ) {\n      return [\n        {\n          name: 'Update schedule driver ',\n          action() {\n            const row = getData(200)[params.node.rowIndex];\n\n            showToastNotification({\n              type: 'success',\n              message: `Accion Update sobre el driver ${\n                row.name\n              } en  column ${params.column.getColId()} con value ${\n                params.value\n              } `\n            });\n          },\n          cssClasses: ['redFont', 'bold']\n        },\n        {\n          name: 'Edit driver',\n          action() {\n            const row = getData(200)[params.node.rowIndex];\n\n            showToastNotification({\n              type: 'success',\n              message: `Accion Edit sobre el driver ${\n                row.name\n              } en  column ${params.column.getColId()} con value ${\n                params.value\n              } `\n            });\n          },\n          tooltip:\n            'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n        }\n      ];\n    }\n\n    const optionMenu: { label: string; value: any }[] = [\n      {\n        value: '1',\n        label: 'code 1'\n      },\n      {\n        value: '2',\n        label: 'code 2'\n      }\n    ];\n\n    return [\n      {\n        name: 'Update status ',\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Update sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${params.value} `\n          });\n        },\n        cssClasses: ['redFont', 'bold'],\n        subMenu: [\n          {\n            name: 'On',\n            subMenu: mapperDynamicOptionMenuToContextualMenu(optionMenu, params)\n          },\n          {\n            name: 'Off'\n          }\n        ]\n      },\n      {\n        name: 'Edit driver',\n        action() {\n          const row = getData(200)[params.node.rowIndex];\n\n          showToastNotification({\n            type: 'success',\n            message: `Accion Edit sobre el driver ${\n              row.name\n            } en  column ${params.column.getColId()} con value ${params.value} `\n          });\n        },\n        tooltip:\n          'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n      }\n    ];\n\n    // let result = [\n    //   {\n    //     name: 'Alert ' + params.value,\n    //     action: function() {\n    //       window.alert('Alerting about ' + params.value);\n    //     },\n    //     cssClasses: ['redFont', 'bold']\n    //   },\n    //   {\n    //     name: 'Always Disabled',\n    //     disabled: true,\n    //     tooltip:\n    //       'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!'\n    //   },\n    //   {\n    //     name: 'Country',\n    //     subMenu: [\n    //       {\n    //         name: 'Ireland',\n    //         action: function() {\n    //           console.log('Ireland was pressed');\n    //         },\n    //         icon: createFlagImg('ie')\n    //       },\n    //       {\n    //         name: 'UK',\n    //         action: function() {\n    //           console.log('UK was pressed');\n    //         },\n    //         icon: createFlagImg('gb')\n    //       },\n    //       {\n    //         name: 'France',\n    //         action: function() {\n    //           console.log('France was pressed');\n    //         },\n    //         icon: createFlagImg('fr')\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     name: 'Person',\n    //     subMenu: [\n    //       {\n    //         name: 'Niall',\n    //         action: function() {\n    //           console.log('Niall was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Sean',\n    //         action: function() {\n    //           console.log('Sean was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'John',\n    //         action: function() {\n    //           console.log('John was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Alberto',\n    //         action: function() {\n    //           console.log('Alberto was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Tony',\n    //         action: function() {\n    //           console.log('Tony was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Andrew',\n    //         action: function() {\n    //           console.log('Andrew was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Kev',\n    //         action: function() {\n    //           console.log('Kev was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Will',\n    //         action: function() {\n    //           console.log('Will was pressed');\n    //         }\n    //       },\n    //       {\n    //         name: 'Armaan',\n    //         action: function() {\n    //           console.log('Armaan was pressed');\n    //         }\n    //       }\n    //     ]\n    //   },\n    //   'separator',\n    //   {\n    //     name: 'Windows',\n    //     shortcut: 'Alt + W',\n    //     action: function() {\n    //       console.log('Windows Item Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/windows.png\"/>'\n    //   },\n    //   {\n    //     name: 'Mac',\n    //     shortcut: 'Alt + M',\n    //     action: function() {\n    //       console.log('Mac Item Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/mac.png\"/>'\n    //   },\n    //   'separator',\n    //   {\n    //     name: 'Checked',\n    //     checked: true,\n    //     action: function() {\n    //       console.log('Checked Selected');\n    //     },\n    //     icon: '<img src=\"../images/skills/mac.png\"/>'\n    //   },\n    //   'copy'\n    // ];\n    // return result;\n  };\n\n  const templateNoData = () => {\n    return (\n      '<div style=\"height: 100%;width: 100%; background: rgb(245, 245, 245); display: flex; justify-content: center;align-items: center\" >' +\n      '<h1  style=\" fontSize: 22; fontWeight: 400;  color: rgba(49, 59, 67, 0.27); padding: 10px; \">This is a custom \\'no rows\\' overlay</h1>' +\n      '</div>'\n    );\n  };\n\n  const suppressContextMenu = () => {\n    if (columnApi && apiGrid) {\n      return (\n        columnApi!.getColumnState().length === 0 ||\n        apiGrid!.getDisplayedRowCount() === 0\n      );\n    }\n\n    return false;\n  };\n\n  const onBtShowLoading = () => {\n    if (!showLoading) {\n      apiGrid && apiGrid.showLoadingOverlay();\n    } else {\n      apiGrid && apiGrid.hideOverlay();\n    }\n    setShowLoading(!showLoading);\n  };\n\n  const onBtScrolling = () => {\n    apiGrid && apiGrid!.ensureColumnVisible('30-07-2019/date');\n    apiGrid && apiGrid!.ensureColumnVisible('14-06-2019/date');\n\n    apiGridTotal && apiGridTotal!.ensureColumnVisible('30-07-2019/date');\n    apiGridTotal && apiGridTotal!.ensureColumnVisible('14-06-2019/date');\n\n    apiGrid && apiGrid!.ensureIndexVisible(100);\n    apiGrid && apiGrid!.ensureNodeVisible(200);\n  };\n\n  const changeColors = (value: any) => {\n    raiseDoSearchWhenUserStoppedTypingColor(value);\n  };\n\n  const raiseDoSearchWhenUserStoppedTypingColor = debounce((value: any) => {\n    changeConditionalColor(value);\n  }, 150);\n\n  const changeConditionalColor = (color: VColorResult) => {\n    setColorConditional(color.hex);\n\n    const columnDate: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef,\n          cellStyle(params: any) {\n            if (params.value >= valueConditional) {\n              // mark police cells as red\n              return {\n                textAlign: 'end',\n                color: getProperLetterColor(color.hex),\n                backgroundColor: color.hex\n              };\n            }\n            return { textAlign: 'end' };\n          }\n        };\n      });\n    const columnName: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => !y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef\n        };\n      });\n\n    apiGridTotal && apiGridTotal!.setColumnDefs([...columnName, ...columnDate]);\n\n    apiGridTotal && apiGridTotal!.refreshCells();\n  };\n\n  const changeValue = (value: any) => {\n    raiseDoSearchWhenUserStoppedTypingValue(value);\n  };\n\n  const raiseDoSearchWhenUserStoppedTypingValue = debounce((value: any) => {\n    if (!isNaN(value)) {\n      changeConditionalValue(parseInt(value));\n    }\n  }, 150);\n\n  const changeConditionalValue = (value: number) => {\n    setValueConditional(value);\n    const columnDate: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef,\n          cellStyle(params: any) {\n            if (params.value >= value) {\n              // mark police cells as red\n              return {\n                textAlign: 'end',\n                color: getProperLetterColor(colorConditional),\n                backgroundColor: colorConditional\n              };\n            }\n            return { textAlign: 'end' };\n          }\n        };\n      });\n    const columnName: ColDef[] = columnApiTotal!\n      .getColumnState()\n      .filter(y => !y.colId.includes('/date'))\n      .map((x: ColumnState) => {\n        const columnDef: ColDef = apiGridTotal!.getColumnDef(x!.colId);\n        return {\n          ...columnDef\n        };\n      });\n\n    apiGridTotal && apiGridTotal!.setColumnDefs([...columnName, ...columnDate]);\n\n    apiGridTotal && apiGridTotal!.refreshCells();\n  };\n\n  return (\n    <>\n      <div style={{ width: '100%', display: 'flex' }}>\n        <div style={{ height: '100%', width: '100%', display: 'flex' }}>\n          <VInputField\n            inline={true}\n            label={'filters'}\n            id={'value conditional'}\n            value={valueConditional}\n            onChange={changeValue}\n          />\n          <div style={{ marginLeft: '10px' }}>\n            <VColorPicker\n              height={31}\n              width={31}\n              Color={colorConditional}\n              typePickerColor={'SketchPicker'}\n              onChange={changeColors}\n            />\n          </div>\n        </div>\n        <div style={{ width: '99%' }}>\n          <VAgGrid\n            onGridReady={onGridReadyTotal}\n            columnDefs={stateGridTotal.columnDefs}\n            defaultColDef={stateGridTotal.defaultColDef}\n            rowData={stateGridTotal.rowData}\n            gridOptions={topOptions}\n            suppressContextMenu={true}\n            getContextMenuItems={getContextMenuItems}\n            animateRows={true}\n            // overlayNoRowsTemplate={templateNoData()}\n            noRowsOverlayComponent={'customNoRowsOverlay'}\n            loadingOverlayComponent={'customLoadingOverlay'}\n            frameworkComponents={{\n              customLoadingOverlay: VSpinner,\n              customNoRowsOverlay: EmptyData\n            }}\n          />\n        </div>\n      </div>\n\n      <button onClick={toggleContextualMenu}>\n        {' '}\n        {enableContextualMenu ? 'disable ' : 'enable '} Menu contextual\n      </button>\n      <button onClick={toggleVisibleColumns}>\n        {' '}\n        {hideColumns\n          ? 'hide columns, company y last name  '\n          : 'show columns, company y last name '}\n      </button>\n      <button onClick={clearTable}>\n        {clearData ? 'Populate tabla  ' : 'Clear table'}\n      </button>\n      <button onClick={onBtShowLoading}>\n        {showLoading ? 'Hide loading ' : 'Show loading'}\n      </button>\n      <button onClick={onBtScrolling}>scroll to 14-06-2019</button>\n\n      <VAgGrid\n        onGridReady={onGridReady}\n        columnDefs={getState().columnDefs}\n        defaultColDef={getState().defaultColDef}\n        rowData={getState().rowData}\n        enableRangeSelection={true}\n        onRowValueChanged={onRowValueChanged}\n        onCellValueChanged={onCellValueChanged}\n        onColumnMoved={onColumnMoved}\n        suppressContextMenu={!enableContextualMenu || suppressContextMenu()}\n        getContextMenuItems={getContextMenuItems}\n        onDragStarted={onDragStarted}\n        onDragStopped={onDragStopped}\n        animateRows={true}\n        // overlayNoRowsTemplate={templateNoData()}\n        noRowsOverlayComponent={'customNoRowsOverlay'}\n        loadingOverlayComponent={'customLoadingOverlay'}\n        frameworkComponents={{\n          customLoadingOverlay: VSpinner,\n          customNoRowsOverlay: EmptyData\n        }}\n        gridOptions={bottomOptions}\n      />\n    </>\n  );\n};\n\nexport default VAgGridDoc;\n","import React, { Component } from 'react';\nimport { IInfoPage, VPagination } from 'gsi-ui';\n\ninterface ISate {\n  allCountries: any[];\n  currentCountries: any[];\n  currentPage: number;\n  totalPages: number;\n  itemsByPage: number;\n}\n\nclass VPaginationDoc extends Component<any, ISate> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      allCountries: this.getCountry(),\n      currentCountries: [],\n      currentPage: 1,\n      totalPages: 0,\n      itemsByPage: 5\n    };\n  }\n\n  getCountry = () => {\n    return [\n      {\n        country: 'Afghanistan'\n      },\n      {\n        country: 'Albania'\n      },\n      {\n        country: 'Algeria'\n      },\n      {\n        country: 'American Samoa'\n      },\n      {\n        country: 'Andorra'\n      },\n      {\n        country: 'Angola'\n      },\n      {\n        country: 'Anguilla'\n      },\n      {\n        country: 'Antarctica'\n      },\n      {\n        country: 'Antigua and Barbuda'\n      },\n      {\n        country: 'Argentina'\n      },\n      {\n        country: 'Armenia'\n      },\n      {\n        country: 'Aruba'\n      },\n      {\n        country: 'Australia'\n      },\n      {\n        country: 'Austria'\n      },\n      {\n        country: 'Azerbaijan'\n      },\n      {\n        country: 'Bahamas'\n      },\n      {\n        country: 'Bahrain'\n      },\n      {\n        country: 'Bangladesh'\n      },\n      {\n        country: 'Barbados'\n      },\n      {\n        country: 'Belarus'\n      },\n      {\n        country: 'Belgium'\n      },\n      {\n        country: 'Belize'\n      },\n      {\n        country: 'Benin'\n      },\n      {\n        country: 'Bermuda'\n      },\n      {\n        country: 'Bhutan'\n      },\n      {\n        country: 'Bolivia'\n      },\n      {\n        country: 'Bosnia and Herzegovina'\n      },\n      {\n        country: 'Botswana'\n      },\n      {\n        country: 'Bouvet Island'\n      },\n      {\n        country: 'Brazil'\n      },\n      {\n        country: 'British Indian Ocean Territory'\n      },\n      {\n        country: 'Brunei'\n      },\n      {\n        country: 'Bulgaria'\n      },\n      {\n        country: 'Burkina Faso'\n      },\n      {\n        country: 'Burundi'\n      },\n      {\n        country: 'Cambodia'\n      },\n      {\n        country: 'Cameroon'\n      },\n      {\n        country: 'Canada'\n      },\n      {\n        country: 'Cape Verde'\n      },\n      {\n        country: 'Cayman Islands'\n      },\n      {\n        country: 'Central African Republic'\n      },\n      {\n        country: 'Chad'\n      },\n      {\n        country: 'Chile'\n      },\n      {\n        country: 'China'\n      },\n      {\n        country: 'Christmas Island'\n      },\n      {\n        country: 'Cocos (Keeling) Islands'\n      },\n      {\n        country: 'Colombia'\n      },\n      {\n        country: 'Comoros'\n      },\n      {\n        country: 'Congo'\n      },\n      {\n        country: 'The Democratic Republic of Congo'\n      },\n      {\n        country: 'Cook Islands'\n      },\n      {\n        country: 'Costa Rica'\n      },\n      {\n        country: 'Ivory Coast'\n      },\n      {\n        country: 'Croatia'\n      },\n      {\n        country: 'Cuba'\n      },\n      {\n        country: 'Cyprus'\n      },\n      {\n        country: 'Czech Republic'\n      },\n      {\n        country: 'Denmark'\n      },\n      {\n        country: 'Djibouti'\n      },\n      {\n        country: 'Dominica'\n      },\n      {\n        country: 'Dominican Republic'\n      },\n      {\n        country: 'East Timor'\n      }\n    ];\n  };\n\n  onPageChanged = (data: any) => {\n    const { currentPage, totalPages } = data.paginationData;\n\n    const offset = (currentPage - 1) * data.pageLimit;\n    // console.log('data', data);\n\n    const currentCountries = this.getCountry().slice(\n      offset,\n      offset + data.pageLimit\n    );\n    // console.log('currentCountries', currentCountries);\n    this.setState({\n      currentPage,\n      currentCountries,\n      totalPages,\n      itemsByPage: data.pageLimit\n    });\n  };\n\n  render() {\n    const { allCountries } = this.state;\n    const totalCountries = allCountries.length;\n\n    if (totalCountries === 0) return null;\n\n    return (\n      <React.Fragment>\n        <ul>\n          {this.state.currentCountries.map((x: any, index: number) => (\n            <li key={index}>{x.country}</li>\n          ))}\n        </ul>\n\n        <p>By default</p>\n        <VPagination\n          totalRecords={totalCountries}\n          pageLimit={this.state.itemsByPage}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n          currentPage={this.state.currentPage}\n          labels={{ pages: 'paginas' }}\n          customerStyle={{ borderRadius: '0px' }}\n        />\n\n        <p>Customer</p>\n\n        <VPagination\n          totalRecords={totalCountries}\n          currentPage={this.state.currentPage}\n          pageLimit={this.state.itemsByPage}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n          labels={{\n            itemsByPage: 'Elementos por paginas',\n            renderInfoDetails: this.renderInfoDetails\n          }}\n          style={{ backgroundColor: '#2D2F31', color: 'white' }}\n          customerStyle={{\n            pageSelectedBackgroundColor: '#1985A1',\n            pageSelectedColor: 'white',\n            iconColor: 'white',\n            pageHoverColor: 'black',\n            pageHoverBackgroundColor: '#1985A1',\n            borderRadius: '0px'\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderInfoDetails = (infoPage: IInfoPage) => {\n    return (\n      <div style={{ margin: '0px 10px' }}>\n        {' '}\n        {`${infoPage.currentPage}- ${infoPage.totalPages} <=> Totals ${\n          infoPage.totals\n        }  `}\n      </div>\n    );\n  };\n}\n\nexport default VPaginationDoc;\n","import React, { Component } from 'react';\nimport {\n  TypePickerColor,\n  VColorPicker,\n  VColorResult,\n  VHSLColor,\n  VRGBColor\n} from 'gsi-ui';\n\ninterface IState {\n  typePickerColor: TypePickerColor;\n  color: string | VHSLColor | VRGBColor;\n  disable: boolean;\n}\n\nclass VColorPickerDoc extends Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      typePickerColor: 'SketchPicker',\n      color: 'blue',\n      disable: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <br />\n        <button onClick={this.handleChangeTypeToSketchPicker}>\n          SketchPicker\n        </button>\n        <button onClick={this.handleChangeTypeToChromePicker}>\n          ChromePicker\n        </button>\n        <br />\n        <br />\n        <VColorPicker\n          Color={this.state.color}\n          onChange={this.handleChangeColor}\n          typePickerColor={this.state.typePickerColor}\n          position=\"right\"\n          width={30}\n          height={30}\n          disable={this.state.disable}\n        />\n        <br />\n        <button\n          onClick={() => {\n            this.setState({\n              color: 'red'\n            });\n          }}\n        >\n          change color to red\n        </button>\n\n        <button\n          onClick={() => {\n            this.setState({\n              color: 'blue'\n            });\n          }}\n        >\n          change color to blue\n        </button>\n\n        <button\n          onClick={() => {\n            this.setState({\n              disable: !this.state.disable\n            });\n          }}\n        >\n          {this.state.disable ? 'enable' : 'disable'}\n        </button>\n        <br />\n      </div>\n    );\n  }\n\n  handleChangeColor = (color: VColorResult) => {\n    this.setState({\n      color: color.rgb\n    });\n\n    // console.log(' color:', color.hex)\n  };\n\n  handleChangeTypeToChromePicker = () => {\n    this.setState({\n      typePickerColor: 'ChromePicker'\n    });\n  };\n\n  handleChangeTypeToSketchPicker = () => {\n    this.setState({\n      typePickerColor: 'SketchPicker'\n    });\n  };\n}\n\nexport default VColorPickerDoc;\n","import React, { useState } from 'react';\n\nimport { FieldState, FormState } from 'formstate';\nimport { observer } from 'mobx-react-lite';\nimport moment from 'moment';\nimport { Button } from '@blueprintjs/core';\n\nimport {\n  FileUpload,\n  Validators,\n  VBasicSliderField,\n  VCheckboxField,\n  VDateTimePicker,\n  VInputField,\n  VNumericField,\n  VRadioGroupField,\n  VSelectField,\n  VSelectMultiple,\n  VTagInputField,\n  VTextAreaField\n} from 'gsi-ui';\n\nconst store = [\n  {\n    label: 'This is a store with a very big large text',\n    value: 0\n  },\n  {\n    label: 'Store 2',\n    value: 1\n  }\n];\n\nconst sex = [\n  {\n    label: 'Male',\n    value: 'm',\n    rep: 'M'\n  },\n  {\n    label: 'Female',\n    value: 'f',\n    rep: 'F'\n  }\n];\n\nconst VInputsDoc = observer(() => {\n  const [selectValue, setSelectValue] = useState(store[0].value);\n  const form = new FormState<any>({\n    username: new FieldState(''),\n    search: new FieldState(''),\n    description: new FieldState(''),\n    store: new FieldState(''),\n    tags: new FieldState(''),\n    age: new FieldState(null),\n    have_job: new FieldState(''),\n    sex: new FieldState(''),\n    range: new FieldState(0),\n    places: new FieldState(sex[0].value),\n    date: new FieldState(moment().toDate()),\n    multiple: new FieldState([]),\n    movies: new FieldState([])\n  });\n\n  const searchingAnime = (value: any) =>\n    value.toString().indexOf('anime') !== -1 &&\n    `Can't search anime in work dude!!!!`;\n\n  const setSelectedValue = (value: any) => {\n    setSelectValue(value);\n  };\n\n  const handleSave = (element: any) => {\n    console.log(element);\n  };\n\n  const changeValueSelect = (value: any) => {\n    form.$.places.onChange('f');\n  };\n\n  const rightButton = <Button minimal icon=\"lock\" />;\n  return (\n    <React.Fragment>\n      <Button\n        text=\"Change Movies Value\"\n        onClick={() => {\n          form.$.movies.onChange([1]);\n        }}\n      />\n      <VSelectMultiple\n        inline\n        fill\n        required\n        label=\"Select movies:\"\n        options={[\n          { label: 'The Shawshank Redemption', value: 1 },\n          { label: 'The Godfather', value: 2 },\n          { label: 'The Godfather: Part II', value: 3 },\n          { label: 'The Dark Knight', value: 4 }\n        ]}\n        id=\"selectMultipleTags\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 5,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        placeholder=\"evil placeholder...\"\n        fieldState={form.$.movies}\n        onChange={() => {\n          console.log(form.$.movies.value);\n        }}\n      />\n\n      <FileUpload />\n      <VInputField\n        fieldState={form.$.username}\n        fill\n        tipLabel=\"Username\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 5,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        rightElement={rightButton}\n        id=\"username\"\n        noLabel\n        inline\n      />\n      <VInputField\n        required\n        layer={{\n          labelWidth: 6,\n          inputWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        fieldState={form.$.username}\n        id=\"username\"\n        label=\"Username\"\n        inline\n      />\n      <VInputField\n        required\n        validators={[searchingAnime, Validators.lt(10), Validators.exact(9)]}\n        fill\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        fieldState={form.$.search}\n        id=\"username\"\n        label=\"Search\"\n        inline\n        type=\"search\"\n        leftIcon=\"search\"\n      />\n      <VSelectField\n        minimal\n        defaultText=\"Please enter a text\"\n        fill\n        tipLabel=\"Movies\"\n        layer={{\n          labelWidth: 6,\n          inputWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        options={store}\n        inline\n        label=\"Store List\"\n        value={selectValue}\n        id=\"store\"\n        icon=\"search\"\n        onChange={setSelectedValue}\n      />\n      <Button\n        text=\"Change Select\"\n        onClick={() => {\n          setSelectedValue('s2');\n        }}\n      />\n      <VTextAreaField\n        fill\n        layer={{\n          labelWidth: 6,\n          inputWidth: 3,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"description\"\n        label=\"Description\"\n        inline\n        fieldState={form.$.description}\n      />\n      <VTagInputField\n        fill\n        limit={5}\n        tagValidation={{\n          regex: /[a-z0-9]/,\n          errorMessage: 'Is a not valid value'\n        }}\n        layer={{\n          labelWidth: 6,\n          inputWidth: 4,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"tags\"\n        fieldState={form.$.tags}\n        inline\n        label=\"Tags\"\n      />\n      <VNumericField\n        id=\"age\"\n        fieldState={form.$.age}\n        label=\"\"\n        noLabel\n        layer={{\n          labelOrientation: 'end',\n          inputOrientation: 'center'\n        }}\n        inline\n      />\n      <VCheckboxField\n        checkBoxAtLeft\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'start',\n          inputOrientation: 'end'\n        }}\n        fieldState={form.$.have_job}\n        id=\"have_job\"\n        label=\"Have a job?\"\n        inline\n        alignIndicator=\"right\"\n      />\n      <VRadioGroupField\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"Sex\"\n        options={sex}\n        label=\"Sex\"\n        inline\n        fieldState={form.$.sex}\n      />\n      <VBasicSliderField\n        fill\n        layer={{\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        id=\"range\"\n        fieldState={form.$.range}\n        label=\"Range\"\n        inline\n      />\n      <VDateTimePicker\n        required\n        fill\n        inline\n        layer={{\n          inputWidth: 5,\n          labelWidth: 6,\n          labelOrientation: 'end',\n          inputOrientation: 'start'\n        }}\n        label=\"TimePicker\"\n        dateType=\"DATE\"\n        format=\"MM/DD/YYYY\"\n        id=\"date\"\n        fieldState={form.$.date}\n        icon={{ iconName: 'calendar' }}\n      />\n      <div>\n        <VSelectField\n          defaultText=\"Please enter a text\"\n          layer={{\n            labelWidth: 6,\n            inputWidth: 2,\n            labelOrientation: 'end',\n            inputOrientation: 'start'\n          }}\n          iconOnly\n          icon=\"search\"\n          inline\n          label=\"Places\"\n          options={sex}\n          id=\"places\"\n          fieldState={form.$.places}\n        />\n        <button onClick={changeValueSelect}>change value select</button>\n      </div>\n    </React.Fragment>\n  );\n});\nexport default VInputsDoc;\n","import React, { Component } from 'react';\nimport { DragAndDropList, IDNDList } from 'gsi-ui';\n\nconst list: IDNDList[] = [\n  {\n    id: '1',\n    label: 'List 1',\n    list: [\n      {\n        label: 'Item 1',\n        value: '1'\n      },\n      {\n        label: 'Item 2',\n        value: '2'\n      },\n      {\n        label: 'Item 3',\n        value: '3'\n      },\n      {\n        label: 'Item 4',\n        value: '4'\n      }\n    ]\n  },\n  {\n    id: '2',\n    label: 'List 2',\n    list: [\n      {\n        label: 'Item 5',\n        value: '5'\n      },\n      {\n        label: 'Item 6',\n        value: '6'\n      },\n      {\n        label: 'Item 7',\n        value: '7'\n      },\n      {\n        label: 'Item 8',\n        value: '8'\n      }\n    ]\n  },\n  {\n    id: '3',\n    label: 'List 3',\n    list: [\n      {\n        label: 'Item 9',\n        value: '9'\n      },\n      {\n        label: 'Item 10',\n        value: '10'\n      },\n      {\n        label: 'Item 11',\n        value: '11'\n      },\n      {\n        label: 'Item 12',\n        value: '12'\n      }\n    ]\n  }\n];\n\nclass VDragAndDropDoc extends Component<{}, {}> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return (\n      <DragAndDropList\n        list={list}\n        containerOrientation=\"horizontal\"\n        onDragAndDrop={output => console.log(output)}\n      />\n    );\n  }\n}\n\nexport default VDragAndDropDoc;\n","import React, { Component } from 'react';\nimport { Button } from '@blueprintjs/core';\nimport styled from 'styled-components';\nimport {\n  IToastNotificationProps,\n  showToastNotification,\n  VCardPanel,\n  VSpinner\n} from 'gsi-ui';\n\nexport const RowButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nclass VNotificationToastDocs extends Component {\n  buttonsHeaderRow = () => (\n    <RowButtons>\n      <VSpinner color=\"#fff\" size={20} />\n      <Button minimal icon=\"plus\" text=\"New\" />\n      <Button minimal icon=\"edit\" text=\"Edit\" />\n    </RowButtons>\n  );\n\n  render() {\n    const propsList: IToastNotificationProps[] = [\n      {\n        type: 'success',\n        message:\n          'This is a basic Success notification, Congratulations you do it well'\n      },\n      {\n        type: 'warning',\n        message:\n          'This is a basic Warning notification, be careful with what are you doing'\n      },\n      {\n        type: 'danger',\n        message: 'This is a basic danger notification, something went wrong'\n      },\n      {\n        type: 'primary',\n        message: 'This is a primary notification, just normal, but Blue ;)'\n      },\n      {\n        type: 'none',\n        message: 'This is a normal notification, use it at your will'\n      },\n      {\n        type: 'primary',\n        message: (\n          <>\n            This is a more complex Toast notification is much like the one in\n            the documentation <em>but better :)</em> it will print in the\n            console just before this one banish and has a duration of\n            <em>5 s (5000 ms)</em> form more documentation:{' '}\n            <a\n              href=\"https://blueprintjs.com/docs/#core/components/toast\"\n              target=\"_blank\"\n            >\n              the documentation\n            </a>\n            , you can even pass a React component OMG!!!\n          </>\n        ),\n        timeout: 5000,\n        onDismiss: () => console.log('notification dismissed'),\n        action: {\n          href: 'https://blueprintjs.com/docs/#core/components/toast',\n          target: '_blank',\n          text: <strong>This navigate to the site too</strong>\n        }\n      }\n    ];\n\n    return (\n      <div style={{ padding: '25px' }}>\n        <VCardPanel\n          headerText=\"Testing Custom Header Panel\"\n          headerCustomComponent={this.buttonsHeaderRow()}\n        />\n        {propsList.map((props, index) => {\n          const text =\n            index === propsList.length - 1\n              ? 'Complex Notification'\n              : props.type;\n          return (\n            <Button\n              key={index}\n              intent={props.type}\n              text={text}\n              style={{ marginRight: '5px' }}\n              onClick={() => showToastNotification(props)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default VNotificationToastDocs;\n","import React from 'react';\nimport { VCarousel, VInputField, VTextAreaField } from 'gsi-ui';\n\nconst elementsCarousel: any = [\n  <VInputField\n    layer={{\n      labelWidth: 6,\n      inputWidth: 6,\n      labelOrientation: 'end',\n      inputOrientation: 'center'\n    }}\n    value=\"\"\n    id=\"username\"\n    label=\"Username\"\n    inline\n  />,\n  <VTextAreaField\n    fill\n    layer={{\n      labelWidth: 6,\n      inputWidth: 3,\n      labelOrientation: 'end',\n      inputOrientation: 'start'\n    }}\n    id=\"description\"\n    label=\"Description\"\n    inline\n    value=\"\"\n  />,\n  <VTextAreaField\n    fill\n    layer={{\n      labelWidth: 6,\n      inputWidth: 3,\n      labelOrientation: 'end',\n      inputOrientation: 'start'\n    }}\n    id=\"description\"\n    label=\"Description\"\n    inline\n    value=\"\"\n  />\n];\n\nconst VCarouselDoc = () => {\n  return (\n    <VCarousel\n      height=\"200px\"\n      width=\"500px\"\n      elements={elementsCarousel}\n      buttonsJustify=\"flex-end\"\n    />\n  );\n};\n\nexport default VCarouselDoc;\n","import React, { Component } from 'react';\nimport { VLoadProgressTask } from 'gsi-ui';\nimport { Button } from '@blueprintjs/core';\n\ninterface IState {\n  open: boolean;\n}\nclass VLoadProgressDoc extends Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button onClick={this.openProgress}>Open Task</Button>\n        <VLoadProgressTask\n          onClose={() => this.setState({ open: false })}\n          isOpen={this.state.open}\n          title=\"Import Account\"\n          icon=\"import\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  openProgress = (event: any) => {\n    this.setState({ open: true });\n    setTimeout(() => {\n      this.setState({\n        open: false\n      });\n    }, 5000);\n  };\n}\n\nexport default VLoadProgressDoc;\n","import React, { Component } from 'react';\nimport { VSuspenseLoading } from 'gsi-ui';\n\nconst Table = React.lazy(() => {\n  return Promise.all([\n    import('../table/VTableWithWidget'),\n    new Promise(resolve => setTimeout(resolve, 3000))\n  ]).then(([moduleExports]) => moduleExports);\n});\n\nclass VSuspenseDoc extends Component<{}, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={{ width: 600 }}>\n        <VSuspenseLoading>\n          <Table />\n        </VSuspenseLoading>\n      </div>\n    );\n  }\n}\n\nexport default VSuspenseDoc;\n","import React, { Component } from 'react';\nimport { ITabsPanelTypes, VTabsPanel } from 'gsi-ui';\n\nclass VTabsPanelDoc extends Component {\n  render() {\n    const tabList: ITabsPanelTypes[] = [\n      {\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        content: <p>Hello</p>,\n        key: '1'\n      },\n      {\n        label: 'Hogar',\n        key: '2',\n        dataBadge: 3,\n        content: <span>World </span>\n      },\n      {\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        label: 'deliveries actives for now',\n        key: '3',\n        dataBadge: 12,\n        content: <h3>it's me</h3>\n      }\n    ];\n    const FirstTabList: ITabsPanelTypes[] = [\n      {\n        label: 'Container Tab',\n        icon: { intent: 'primary', icon: 'home', iconSize: 16 },\n        content: (\n          <div style={{ padding: '5px' }}>\n            <VTabsPanel\n              size=\"small\"\n              backgroundColor=\"white\"\n              padding=\"10px 25px\"\n              tabList={tabList}\n              activeBorderColor=\"red\"\n              active=\"3\"\n              beforeChangeTabValidation\n              handleChange={this.handelChangeTab}\n              tabsAlertProps={{\n                confirmButtonText: 'Confirm',\n                cancelButtonText: 'Stay in tab',\n                canEscapeKeyCancel: true,\n                bodyText:\n                  'Are you sure you want to change the tab, changes will be lost',\n                intent: 'success'\n              }}\n            />\n          </div>\n        ),\n        key: '1'\n      }\n    ];\n    return (\n      <div style={{ padding: '25px' }}>\n        <VTabsPanel\n          backgroundColor=\"antiquewhite\"\n          size=\"small\"\n          padding=\"10px 25px\"\n          tabList={FirstTabList}\n          activeBorderColor=\"red\"\n          active=\"1\"\n          handleChange={this.handelChangeTab}\n        />\n      </div>\n    );\n  }\n\n  handelChangeTab = (tab: ITabsPanelTypes) => {};\n}\n\nexport default VTabsPanelDoc;\n","import React from 'react';\nimport { VOrgChart } from 'gsi-ui';\n\nconst dataSource = {\n  name: 'Hierarchy',\n  title: 'Vertrax',\n  id: 'root',\n  children: [\n    { name: 'LaTank', title: 'Company', className: 'Company', id: 1 },\n    {\n      name: 'LaTank2',\n      title: 'Company',\n      className: 'Company',\n      id: 2,\n      children: [\n        {\n          name: 'Los Angeles Mx',\n          title: 'Terminal',\n          className: 'Terminal',\n          id: 7\n        },\n        {\n          name: 'California',\n          title: 'Terminal',\n          className: 'Terminal',\n          id: 8\n        }\n      ]\n    },\n    { name: 'La Tank 3', title: 'Company', className: 'Company', id: 3 },\n    {\n      name: 'La Tank 4',\n      title: 'Company',\n      className: 'Company',\n      id: 4,\n      children: [\n        { name: 'Texas', title: 'Terminal', className: 'Terminal', id: 9 },\n        { name: 'Austin', title: 'Terminal', className: 'Terminal', id: 10 }\n      ]\n    }\n  ]\n};\n\nconst VOrgChartDoc = () => {\n  const onReorderHierarchy = (data: any) => {\n    console.log(data);\n  };\n\n  const onClickCompany = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <VOrgChart\n      dataSource={dataSource}\n      onReorder={onReorderHierarchy}\n      onClick={onClickCompany}\n      draggable\n    />\n  );\n};\n\nexport default VOrgChartDoc;\n","import React from 'react';\nimport { Divider, H1, H2, Pre } from '@blueprintjs/core';\nimport { HomeContainer } from './styled';\n\nconst Home = () => {\n  return (\n    <HomeContainer>\n      <H1 className=\"bp3-heading\">GSI-VX-UI</H1>\n      <Divider />\n      <p className=\"bp3-text-muted bp3-text-large\">\n        It's an extension of the blueprint framework. It has other components\n        that are not included in blueprintjs.\n      </p>\n      <H2 className=\"bp3-heading\">Components</H2>\n      <Divider />\n      <Pre>\n        <ul className=\"bp3-list\">\n          <li>\n            VTable - Extension of @blueprintjs/table, added multiple\n            functionalities.\n          </li>\n          <li>VBadge - Native component, not libraries.</li>\n          <li>VCardPanel - Configurable Card, uses Card @blueprintjs/core.</li>\n          <li>\n            VColorPicker - Color Picker Component uses the library react-color.\n          </li>\n          <li>\n            VDragAndDropList - Drag and Drop List Component use the library\n            react-beautiful-dnd.\n          </li>\n          <li>VPaginator - Native Paginator Component, not libraries.</li>\n          <li>\n            VProgressLabel - Native Component, not libraries. Useful to\n            represent multiples progress bar.\n          </li>\n          <li>VCarousel - Native Component, uses react-pose for animations.</li>\n          <li>VSelectionList - Native Component.</li>\n          <li>\n            VSelectUnselectItems - Native Component to switch items between\n            lists.\n          </li>\n          <li>VSpinner - Extension of @blueprintjs/core Spinner.</li>\n          <li>VSuspenseLoadint - Extension of Suspense component of React.</li>\n          <li>\n            VTabsMenu - Extension of @blueprintjs/core Tabs. added customizable\n            functions.\n          </li>\n          <li>VToastNotification - Extension of @blueprintjs/core Toaster.</li>\n          <li>\n            VOrgChart - Native Component uses orgchart library. Useful to\n            represent hierarchies.\n          </li>\n        </ul>\n      </Pre>\n    </HomeContainer>\n  );\n};\nexport default Home;\n","import React from 'react';\nimport { IRiftRoute } from 'rift-router';\nimport VBlueprintDoc from '../docs/components/table/VBlueprint';\nimport { VSelectUnselectItemsDemo } from './components/forms/SelectUnselectItemsDemo';\nimport VAgGridDoc from './components/table/VAgGrid';\nimport VPaginationDocs from './components/table/VPagination';\nimport VColorPickerDoc from './components/forms/VColorPicker';\nimport VInputsDoc from './components/forms/VInputs';\nimport VDragAndDropDoc from './components/forms/VDragAndDrop';\nimport VNotificationToastDocs from './components/notifications/VNotificationToast';\nimport VCarouselDoc from './components/carousel/VCarousel';\nimport VLoadProgressDoc from './components/load-progress/VLoadProgress';\nimport VSuspenseDoc from './components/suspense/VSuspense';\nimport VTabsPanelDoc from './components/tabs/VTabsPanel';\nimport VOrgChartDoc from './components/org-chart/VOrgChart';\nimport Home from './template/Home';\n\nexport const routes: IRiftRoute[] = [\n  {\n    component: () => '',\n    onEnter: () => '/',\n    path: '*'\n  },\n  { path: '/', component: <Home /> },\n  { path: '/table/ag-grid', component: <VAgGridDoc /> },\n  { path: '/table/blueprint', component: <VBlueprintDoc /> },\n  { path: '/table/blueprint/suspense', component: <VSuspenseDoc /> },\n  { path: '/table/pagination', component: <VPaginationDocs /> },\n  { path: '/forms', component: () => <VInputsDoc /> },\n  { path: '/forms/color-picker', component: () => <VColorPickerDoc /> },\n  {\n    path: '/forms/select-unselect',\n    component: () => <VSelectUnselectItemsDemo />\n  },\n  { path: '/forms/dnd', component: () => <VDragAndDropDoc /> },\n  { path: '/tabs-panel', component: () => <VTabsPanelDoc /> },\n  { path: '/toast', component: () => <VNotificationToastDocs /> },\n  { path: '/load-progress', component: () => <VLoadProgressDoc /> },\n  { path: '/hierarchy', component: () => <VOrgChartDoc /> },\n  { path: '/carousel', component: () => <VCarouselDoc /> }\n];\n","import React from 'react';\nimport { RiftGate, RiftProvider } from 'rift-router';\nimport { DocsContainer, MainContainer } from './styled';\nimport { MainSidebar } from './MainSidebar';\nimport { routes } from '../router';\nimport './main.css';\n\nexport const Main = () => {\n  return (\n    <DocsContainer>\n      <RiftProvider routes={routes}>\n        <MainSidebar />\n        <MainContainer>\n          <div id=\"center\" className=\"main center\">\n            <RiftGate />\n          </div>\n        </MainContainer>\n      </RiftProvider>\n    </DocsContainer>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Main } from './docs/template/Main';\n\nclass App extends Component {\n    render() {\n        return <Main />;\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { LicenseManager } from 'ag-grid-enterprise';\nimport App from './App';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\n\nconst licence = process.env.REACT_APP_AGGRID_LICENCE\n  ? process.env.REACT_APP_AGGRID_LICENCE\n  : '';\nLicenseManager.setLicenseKey(licence);\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}